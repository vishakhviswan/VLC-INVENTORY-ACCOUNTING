{"version":3,"sources":["store/Context.js","Components/Navbar.js","containers/login/Login.js","Pages/LoginPage.js","datas/DashBoardStock.js","containers/DashBoard.js","Pages/DashBoardPage.js","containers/UsersList.js","Pages/ListOfUsersPage.js","containers/AddUsers.js","Pages/AddUsersPage.js","store/SideMenuContext.js","containers/inventory/InventorySideMenu.js","Components/CkArrival.js","Components/MpArrival.js","Components/PkArrivals.js","store/ArrivalsContext.js","Components/RcnArrival.js","Components/GkArrivals.js","containers/inventory/ArrivedMaterials.js","containers/inventory/ArrivalsTopBar.js","Pages/inventory/ArrivedMaterialsPage.js","containers/inventory/StockRegister.js","Pages/inventory/StockRegisterPage.js","Components/TypeAhead.js","containers/inventory/ProcessingInput.js","containers/inventory/ProcessingOutput.js","Pages/inventory/ProcessingPage.js","Components/AlterModal.js","Components/ConfirmDltModal.js","Components/CreateModal.js","Components/InventoryHomeMenu.js","Components/InventoryHomeStock.js","Components/InventoryModal.js","Components/InventorySideBar.js","Pages/InventoryPage.js","containers/inventory/ChartofAccounts.js","Pages/ChartofAccountsPage.jsx","App.js","firebase/config.js","index.js"],"names":["FirebaseContext","createContext","AuthContext","Context","children","useState","userDtls","setUserDtls","userDetails","setUserDetails","Provider","value","NavbarHeader","navigate","useNavigate","useContext","auth","getAuth","className","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","href","company","Toggle","aria-controls","Collapse","id","Nav","Link","onClick","alert","size","color","NavDropdown","eventKey","title","displayName","Item","signOut","then","Login","email","setEmail","password","setPassword","Form","onSubmit","e","preventDefault","signInWithEmailAndPassword","catch","error","message","Group","controlId","Label","Select","Control","onChange","target","type","placeholder","Check","label","Button","LoginPage","name","quantity","lots","DashBoard","dropDownValue1","setDropDownValue1","dropDownValue2","setDropDownValue2","datas","DashBoardStock","Row","xs","md","Col","Card","Body","Title","DropdownButton","menuVariant","Dropdown","active","Text","ProgressBar","animated","now","map","data","lg","sm","DashBoardPage","UsersList","db","useEffect","a","getDocs","collection","userData","docs","doc","console","log","getUsers","Table","striped","bordered","hover","obj","index","username","designation","mobile","ListOfUsersPage","AddUsers","userName","setUserName","setDesignation","setCompany","setMobile","confPassword","setConfPassword","createUserWithEmailAndPassword","result","usersRef","setDoc","user","uid","updateProfile","currentUser","errorCode","code","errorMessage","AddUsersPage","SideBarContext","SideContext","show","setShow","create","setCreate","alter","setAlter","list","setList","book","setBook","showCreate","setShowCreate","createGroup","setCreateGroup","createCategory","setCreateCategory","createUnit","setCreateUnit","createItem","setCreateItem","createGodown","setCreateGodown","isAlter","setIsAlter","titles","setTitles","labelOne","setLabelOne","labelTwo","setLabelTwo","labelThree","setLabelThree","placeHolder","setPlaceHolder","placeHolder2","setPlaceHolder2","underSelection","setUnderSelection","phUnit","setPhUnit","phQty","setPhQty","phRate","setPhRate","phValue","setPhValue","phLot","setPhLot","showBatchModal","setShowBatchModal","phMfgDt","setPhMfgDt","phExpDt","setphExpDt","phGodown","setPhGodown","phBatch","setPhBatch","StockAlterContext","AlterContext","showAlter","setShowAlter","alterGroup","setAlterGroup","alterCategory","setAlterCategory","alterItem","setAlterItem","alterUnit","setAlterUnit","alterGodown","setAlterGodown","docId","setDocId","showDltModal","setShowDltModal","presentCollection","setPresentCollection","dltTitle","setDltTitle","dltBody","setDltBody","alterDate","setAlterDate","listGroup","setListGroup","listCategory","setListCategory","listItem","setListItem","listUnit","setListUnit","listGodown","setListGodown","listShow","setListShow","InventorySideMenu","CkArrival","bags","setBags","setValue","currentValue","setCurrentValue","FindPound","parseFloat","toFixed","wholes","setWholes","pieces","setPieces","pwl","setPwl","rej","setRej","setImpOrLoc","origin","setOrigin","as","required","MpArrival","PkArrivals","column","TopBarContext","TopContext","recived","setRecived","recivedFrom","setRecivedFrom","date","setDate","lot","setLot","validated","setValidated","RcnArrival","impOrLoc","mark","setMark","arrived","setArrived","invoice","setInvoice","outurn","setOuturn","vehicle","setVehicle","weight","setWeight","remarks","setRemarks","setCurrentUser","dweight","setDweight","idString","toString","docRef","getDoc","docSnap","exists","getUser","noValidate","form","currentTarget","checkValidity","stopPropagation","RcnArrivalRef","createdBy","lotNo","recivedGrade","importOrLocal","rcnMark","arrivedFrom","invoiceNo","vehicleNo","addDoc","itemName","under","parseInt","Quantity","Feedback","InputGroup","aria-describedby","Modal","onHide","dialogClassName","aria-labelledby","Header","closeButton","GkArrivals","ArrivedMaterials","ArrivalsTopBar","ArrivedMaterialsPage","StockRegister","rcnStock","setRcnStock","RcnStockData","getRcnStock","StockRegisterPage","TypeAhead","singleSelections","setSingleSelections","labelKey","options","selected","ProcessingInput","number","setNumber","pressed","setPressed","press","setPress","handleEnter","event","keyCode","Array","prototype","indexOf","call","elements","focus","onKeyDown","elementInArray","ProcessingOutput","ProcessingPage","AlterModal","setTitle","masterList","setMasterList","handleCloseAlter","window","location","reload","collectionData","getCollection","onSelection","dataset","q","query","where","forEach","groupName","categoryName","categoryUnder","unit","rate","godown","batch","mfgDt","expDt","symbol","formalName","uqc","godownName","backdrop","keyboard","i","key","data-value","Footer","ConfirmDltModal","handleClose","handleDelete","deleteDoc","CreateModal","gName","setGName","gName2","setGName2","setUnder","setUnit","uqcName","setUqcName","setQuantity","setRate","setGodown","setBatch","setMfgDt","setExpDt","handleCloseUQC","setNewUQC","handleCloseBatchModal","categoryDetails","setCategoryDetails","groupDetails","setGroupDetails","godownDetails","setGodownDetails","uqcDetails","setUqcDetails","unitDetails","setUnitDetails","alterValidated","setAlterValidated","getUqc","uqcData","getUnits","unitData","getCategory","categoryData","getGroup","getGodown","GodownData","handleSubmit","StockGroupRef","StockCollectionRef","StockUnitRef","StockGodownRef","factory","handleUpdateItem","alterItemRef","updateDoc","updatedOn","serverTimestamp","handleSubmitItem","StockItemRef","newUQC","alterGroupRef","alterCategoryRef","alterUnitRef","alterGodownRef","plaintext","toUpperCase","aria-label","FormControl","findValue","disabled","newUqcRef","FormSelect","colSpan","InventoryHomeMenu","handleAlert","text","style","width","height","textAlign","lineHeight","InventoryHomeStock","stockDetails","setStockDetails","stockData","getStock","reduce","v","countGkWholes","filter","length","InventoryModal","setId","handleCreate","handleAlter","callList","handleList","marginLeft","InventorySideBar","OffCanvasExample","props","Offcanvas","placement","InventoryPage","ChartofAccounts","masterList1","setMasterList1","title1","setTitle1","pt","ListGroup","numbered","action","ChartofAccountsPage","App","onAuthStateChanged","userRef","exact","path","element","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0566b8b0.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nexport const FirebaseContext = createContext(null);\r\nexport const AuthContext = createContext(null);\r\n\r\n\r\n\r\nexport default function Context({ children }) {\r\n  const [userDtls, setUserDtls] = useState([]);\r\n  const [userDetails, setUserDetails] = useState([]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ userDtls, setUserDtls, userDetails, setUserDetails }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n","import { getAuth, signOut } from \"firebase/auth\";\r\nimport React, { useContext } from \"react\";\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../store/Context\";\r\nimport {\r\n  UilRupeeSign,\r\n  UilCoins,\r\n  UilCalendarAlt,\r\n  UilReceiptAlt,\r\n  UilUsersAlt,\r\n  UilUser,\r\n} from \"@iconscout/react-unicons\";\r\nfunction NavbarHeader() {\r\n\r\n  const navigate = useNavigate();\r\n  const { userDetails,userDtls } = useContext(AuthContext);\r\n  const auth = getAuth();\r\n\r\n  return (\r\n    <div className=\"navbar_ParentDiv\">\r\n      <div className=\"navbar_ChildDiv\">\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n          <Container>\r\n            <Navbar.Brand href=\"/\">\r\n              Prakash Exports\r\n              {userDetails.company ? `, ${userDetails.company}` : \"\"}\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"me-auto\">\r\n                <Nav.Link\r\n                  onClick={() => {\r\n                    alert(\"Coming Soon (Work on Progress)\");\r\n                  }}\r\n                >\r\n                  <UilRupeeSign size=\"18\" color=\"#61DAFB\" /> Accounting\r\n                </Nav.Link>\r\n                <Nav.Link\r\n                  onClick={() => {\r\n                    navigate(\"/inventory\");\r\n                  }}\r\n                >\r\n                  <UilCoins size=\"18\" color=\"#61DAFB\" /> Inventory\r\n                </Nav.Link>\r\n                <Nav.Link\r\n                  onClick={() => {\r\n                    navigate(\"/processing\");\r\n                  }}\r\n                >\r\n                  <UilCalendarAlt size=\"18\" color=\"#61DAFB\" /> Notifications\r\n                </Nav.Link>\r\n                <Nav.Link\r\n                  onClick={() => {\r\n                    navigate(\"/processing\");\r\n                  }}\r\n                >\r\n                  <UilReceiptAlt size=\"18\" color=\"#61DAFB\" /> Orders\r\n                </Nav.Link>\r\n                <Nav.Link\r\n                  onClick={() => {\r\n                    navigate(\"/processing\");\r\n                  }}\r\n                >\r\n                  <UilUsersAlt size=\"18\" color=\"#61DAFB\" /> Employees\r\n                </Nav.Link>\r\n              </Nav>\r\n              <Nav>\r\n                <Nav.Link\r\n                  value=\"Login\"\r\n                  onClick={() => {\r\n                    if (userDtls) {\r\n                    } else {\r\n                      navigate(\"/signin\");\r\n                    }\r\n                  }}\r\n                >\r\n                  {userDtls ? \"\" : \"Login\"}\r\n                </Nav.Link>\r\n                <Nav.Link>\r\n                  <UilUser size=\"18\" color=\"#61DAFB\" />\r\n                </Nav.Link>\r\n                {userDtls && (\r\n                  <NavDropdown\r\n                    eventKey={2}\r\n                    title={userDtls ? ` Hello, ${userDtls.displayName}` : \"\"}\r\n                    id=\"navbarScrollingDropdown\"\r\n                  >\r\n                    <NavDropdown.Item\r\n                      onClick={() => {\r\n                        signOut(auth).then(() => {\r\n                          navigate(\"/\");\r\n                        });\r\n                      }}\r\n                    >\r\n                      Logout\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                )}\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavbarHeader;\r\n","import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate()\r\n  const auth = getAuth();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(() => {\r\n        navigate('/')\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"login_ParentDiv\">\r\n      <div className=\"login_ChildDiv\">\r\n        <Container>\r\n          <div className=\"loginFormDiv\">\r\n            <div className=\"formHeading\">\r\n              <h3>Login</h3>\r\n            </div>\r\n\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Select One</Form.Label>\r\n                <Form.Select size=\"sm\">\r\n                  <option>Head Offce</option>\r\n                  <option>Adm Offce</option>\r\n                  <option>Filling Factory</option>\r\n                  <option>Branch Factory</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Select Company</Form.Label>\r\n                <Form.Select size=\"sm\">\r\n                  <option>Gunia Bissau</option>\r\n                  <option>Cote D Ivory</option>\r\n                  <option>Ghana</option>\r\n                  <option>Tanzania</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                />\r\n                {/* <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text> */}\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport NavbarHeader from '../Components/Navbar'\r\nimport Login from '../containers/login/Login';\r\n\r\n\r\nfunction LoginPage() {\r\n    return (\r\n      <div className=\"signIn_ParentDiv\">\r\n        <NavbarHeader />\r\n        <div className=\"signIn_childDiv\">\r\n          <Login/>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n","// ********New*********\r\n\r\nexport default [\r\n  {\r\n    name: \"Graded Kernels\",\r\n    quantity: \"2500 Kgs\",\r\n    lots: 3,\r\n  },\r\n  {\r\n    name: \"Peeling Machine Kernels\",\r\n    quantity: \"1500 Kgs\",\r\n    lots: 2,\r\n  },\r\n  {\r\n    name: \"Peeled Kernels\",\r\n    quantity: \"1500 Kgs\",\r\n    lots: 2,\r\n  },\r\n  {\r\n    name: \"Graded Kernels\",\r\n    quantity: \"2500 Kgs\",\r\n    lots: 3,\r\n  },\r\n  {\r\n    name: \"Peeling Machine Kernels\",\r\n    quantity: \"1500 Kgs\",\r\n    lots: 2,\r\n  },\r\n  {\r\n    name: \"Peeled Kernels\",\r\n    quantity: \"1500 Kgs\",\r\n    lots: 2,\r\n  },\r\n];\r\n","// ********New**********\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  ProgressBar,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n// import { UilAngleDown } from \"@iconscout/react-unicons\";\r\n\r\nimport \"./Containers.css\";\r\nimport DashBoardStock from \"../datas/DashBoardStock\";\r\n\r\nfunction DashBoard() {\r\n  const [dropDownValue1, setDropDownValue1] = useState(\"\");\r\n  const [dropDownValue2, setDropDownValue2] = useState(\"\");\r\n  const datas = DashBoardStock;\r\n\r\n  return (\r\n    <div className=\"dashBoard_ParentDiv\">\r\n      <div className=\"dashBoard_ChildDiv\">\r\n        <Container>\r\n          <Row xs={1} md={2} className=\"g-4\">\r\n            {/* {Array.from({ length: 4 }).map((_, idx) => ( */}\r\n            <Col>\r\n              <Card className=\"cardDashBoard\">\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    <DropdownButton\r\n                      id=\"dropdown-button-dark-example2\"\r\n                      variant=\"secondary\"\r\n                      menuVariant=\"dark\"\r\n                      title={dropDownValue1 ? dropDownValue1 : \"This Month\"}\r\n                      className=\"mt-2\"\r\n                    >\r\n                      <Dropdown.Item\r\n                        onClick={() => {\r\n                          setDropDownValue1(\"This Week\");\r\n                        }}\r\n                        active\r\n                      >\r\n                        This Week\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item\r\n                        onClick={() => {\r\n                          setDropDownValue1(\"This Year\");\r\n                        }}\r\n                      >\r\n                        This Year\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item\r\n                        onClick={() => {\r\n                          setDropDownValue1(\"Past 15 days\");\r\n                        }}\r\n                      >\r\n                        Past 15 days\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item\r\n                        onClick={() => {\r\n                          setDropDownValue1(\"Today\");\r\n                        }}\r\n                      >\r\n                        Today\r\n                      </Dropdown.Item>\r\n                    </DropdownButton>\r\n                  </Card.Title>\r\n\r\n                  <Card.Text>\r\n                    <ProgressBar\r\n                      variant=\"success\"\r\n                      animated\r\n                      now=\"75\"\r\n                      label=\"75%\"\r\n                      // {`${now}%`}\r\n                    />\r\n                    Income @ Rs 1,75,000.00\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <ProgressBar\r\n                      variant=\"danger\"\r\n                      animated\r\n                      now=\"25\"\r\n                      label=\"25%\"\r\n                      // {`${now}%`}\r\n                    />\r\n                    Expences @ Rs 25,000.00\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              <Card className=\"cardDashBoard\">\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    <DropdownButton\r\n                      id=\"dropdown-button-dark-example2\"\r\n                      variant=\"secondary\"\r\n                      menuVariant=\"dark\"\r\n                      title={\r\n                        dropDownValue2\r\n                          ? `Stock ${dropDownValue2}`\r\n                          : \"Stock Today\"\r\n                      }\r\n                      className=\"mt-2\"\r\n                    >\r\n                      <Dropdown.Item\r\n                        onClick={() => {\r\n                          setDropDownValue2(\"Yesterday\");\r\n                        }}\r\n                        active\r\n                      >\r\n                        Yesterday\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item\r\n                        onClick={() => {\r\n                          setDropDownValue2(\"This Week\");\r\n                        }}\r\n                      >\r\n                        This Week\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item\r\n                        onClick={() => {\r\n                          setDropDownValue2(\"Past 15 days\");\r\n                        }}\r\n                      >\r\n                        Past 15 days\r\n                      </Dropdown.Item>\r\n                      <Dropdown.Item\r\n                        onClick={() => {\r\n                          setDropDownValue2(\"Today\");\r\n                        }}\r\n                      >\r\n                        Today\r\n                      </Dropdown.Item>\r\n                    </DropdownButton>\r\n                  </Card.Title>\r\n                  {datas.map((data) => {\r\n                    const { name, quantity, lots } = data;\r\n                    return (\r\n                      <Card.Text className=\"card-text-stock\">\r\n                        <Row>\r\n                          <Col lg={6} sm={3}>\r\n                            {name}\r\n                          </Col>\r\n                          <Col>{`${lots}Lots`}</Col>\r\n                          <Col>{quantity}</Col>\r\n                        </Row>\r\n                      </Card.Text>\r\n                    );\r\n                  })}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              <Card className=\"cardDashBoard\">\r\n                <Card.Body>\r\n                  <Card.Title>Rcn Stock</Card.Title>\r\n                  <Card.Text>Gunnia Bissavu : 250 Bags , 20,000 Kgs</Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              <Card className=\"cardDashBoard\">\r\n                <Card.Body>\r\n                  <Card.Title>Todays Labours Count</Card.Title>\r\n                  <Card.Text>\r\n                    Cutting 350 Nos.\r\n                    <br />\r\n                    Peeling 350 Nos.\r\n                    <br />\r\n                    Grading 350 Nos.\r\n                    <br /> Filling 350 Nos.\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            {/* ))} */}\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashBoard;\r\n","// ********New**********\r\nimport React from 'react'\r\n\r\nimport NavbarHeader from '../Components/Navbar'\r\nimport DashBoard from '../containers/DashBoard'\r\n\r\n\r\nfunction DashBoardPage() {\r\n    \r\n    \r\n    return (\r\n        <div className='dashboard_ParentDiv'>\r\n            <NavbarHeader/>\r\n            <DashBoard/>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default DashBoardPage\r\n","import { collection, getDocs } from \"firebase/firestore\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Button, Container, Table } from \"react-bootstrap\";\r\nimport { FirebaseContext } from \"../store/Context\";\r\nimport \"./UsersList.css\";\r\nfunction UsersList() {\r\n  const [userDetails, setUserDetails] = useState([]);\r\n  const { db } = useContext(FirebaseContext);\r\n  useEffect(() => {\r\n    const getUsers = async () => {\r\n      const userData = await getDocs(collection(db, \"users\"));\r\n      setUserDetails(\r\n        userData.docs.map((doc) => ({\r\n          ...doc.data(),\r\n        }))\r\n      );\r\n      console.log(\"users\", userData);\r\n    };\r\n    getUsers();\r\n  }, [db]);\r\n  console.log(\"hello\", userDetails);\r\n\r\n  return (\r\n    <div className=\"usersList_ParentDiv\">\r\n      <div className=\"usersList_ChildDiv\">\r\n        <Container>\r\n          <Table striped bordered hover variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Designation</th>\r\n                <th>Company</th>\r\n                <th>Mobile #</th>\r\n                <th>Email</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {userDetails.map((obj, index) => (\r\n              <tbody>\r\n                <tr>\r\n                  <td>{index + 1}</td>\r\n                  <td>{obj.username}</td>\r\n                  <td>{obj.designation}</td>\r\n                  <td>{obj.company}</td>\r\n                  <td>{obj.mobile}</td>\r\n                  <td>{obj.email}</td>\r\n                  <td>\r\n                    <Button variant=\"info\">Edit</Button>\r\n                  </td>\r\n                  <td>\r\n                    <Button variant=\"danger\">Delete</Button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            ))}\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersList;\r\n","import React from 'react'\r\nimport NavbarHeader from '../Components/Navbar'\r\nimport UsersList from '../containers/UsersList'\r\n\r\nfunction ListOfUsersPage() {\r\n    return (\r\n        <div className='listOfUsers_ParentDiv'>\r\n            <NavbarHeader/>\r\n            <UsersList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListOfUsersPage\r\n","\r\nimport React, { useState, useContext } from \"react\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  updateProfile,\r\n  getAuth,\r\n} from \"firebase/auth\";\r\nimport { Form, Container, Button } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// fire base related#######################################################\r\nimport { FirebaseContext } from \"../store/Context\";\r\nimport { collection, setDoc, doc } from \"firebase/firestore\";\r\n\r\nfunction AddUsers() {\r\n  const navigate = useNavigate();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [designation, setDesignation] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [confPassword, setConfPassword] = useState(\"\");\r\n  const [id] = useState()\r\n\r\n  // fire base related#######################################################\r\n  const auth = getAuth();\r\n  const { db } = useContext(FirebaseContext);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password === confPassword) {\r\n      createUserWithEmailAndPassword(auth, email, password)\r\n        .then((result) => {\r\n           const usersRef = collection(db, \"users\");\r\n          setDoc(doc(usersRef, result.user.uid), {\r\n             id: result.user.uid,\r\n            username: userName,\r\n            designation: designation,\r\n            company: company,\r\n            email: email,\r\n            mobile: mobile,\r\n           });\r\n\r\n        })\r\n        .then((result) => {\r\n          updateProfile(auth.currentUser, { displayName: userName });\r\n          console.log(\"result\", id);\r\n        })\r\n\r\n        .catch((error) => {\r\n          const errorCode = error.code;\r\n          const errorMessage = error.message;\r\n          alert(errorCode, \"Message:\", errorMessage);\r\n          console.log(errorMessage, errorCode);\r\n        })\r\n        .then(() => {\r\n          navigate(\"/userslist\");\r\n        });\r\n    } else {\r\n      alert(\"Password and Confirm Password not Same\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"addUsers_ParentDiv\">\r\n      <div className=\"addUsers_ChildDiv\">\r\n        <Container>\r\n          <div className=\"signupFormDiv\">\r\n            <div className=\"formHeading\">\r\n              <h3>Add Users</h3>\r\n              <hr />\r\n            </div>\r\n\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Name of the User</Form.Label>\r\n                <Form.Control\r\n                  value={userName}\r\n                  onChange={(e) => setUserName(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Name\"\r\n                />\r\n                {/* <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text> */}\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Select Designation</Form.Label>\r\n                <Form.Select\r\n                  value={designation}\r\n                  onChange={(e) => setDesignation(e.target.value)}\r\n                  size=\"sm\"\r\n                >\r\n                  <option>Select One</option>\r\n                  <option>Factory Manager</option>\r\n                  <option>Factory Clerk</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Select Company</Form.Label>\r\n                <Form.Select\r\n                  value={company}\r\n                  onChange={(e) => setCompany(e.target.value)}\r\n                  size=\"sm\"\r\n                >\r\n                  <option>Select One</option>\r\n                  <option>Diwancheruvu</option>\r\n                  <option>Namavaram</option>\r\n                  <option>Vadisaleru</option>\r\n                  <option>Tuni</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Mobile #</Form.Label>\r\n                <Form.Control\r\n                  value={mobile}\r\n                  onChange={(e) => setMobile(e.target.value)}\r\n                  type=\"number\"\r\n                  placeholder=\"Enter Mobile Number\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Create Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  value={confPassword}\r\n                  onChange={(e) => setConfPassword(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default AddUsers;\r\n","import React from 'react'\r\nimport NavbarHeader from '../Components/Navbar'\r\nimport AddUsers from '../containers/AddUsers'\r\n\r\nfunction AddUsersPage() {\r\n    return (\r\n        <div>\r\n            <NavbarHeader />\r\n            <AddUsers/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUsersPage;","import React, { createContext, useState } from \"react\";\r\n\r\nexport const SideBarContext = createContext(\"\");\r\n\r\nexport const SideContext = ({ children }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [create, setCreate] = useState(false);\r\n  const [alter, setAlter] = useState(false);\r\n  const [list, setList] = useState(false);\r\n  const [book, setBook] = useState(false);\r\n  const [showCreate, setShowCreate] = useState(false);\r\n  const [createGroup, setCreateGroup] = useState(false);\r\n  const [createCategory, setCreateCategory] = useState(false);\r\n  const [createUnit, setCreateUnit] = useState(false);\r\n  const [createItem, setCreateItem] = useState(false);\r\n  const [createGodown, setCreateGodown] = useState(false);\r\n  const [isAlter, setIsAlter] = useState(false);\r\n  const [titles, setTitles] = useState(\"\");\r\n  const [labelOne, setLabelOne] = useState(\"\");\r\n  const [labelTwo, setLabelTwo] = useState(\"\");\r\n  const [labelThree, setLabelThree] = useState(\"\");\r\n  const [placeHolder, setPlaceHolder] = useState(\"\");\r\n  const [placeHolder2, setPlaceHolder2] = useState(\"\");\r\n  const [underSelection, setUnderSelection] = useState(\"\");\r\n  const [phUnit, setPhUnit] = useState(\"\");\r\n  const [phQty, setPhQty] = useState(\"\");\r\n  const [phRate, setPhRate] = useState(\"\");\r\n  const [phValue, setPhValue] = useState(\"\");\r\n  const [phLot, setPhLot] = useState(\"\");\r\n  const [showBatchModal, setShowBatchModal] = useState(false);\r\n  const [phMfgDt, setPhMfgDt] = useState(\"\");\r\n  const [phExpDt, setphExpDt] = useState(\"\");\r\n  const [phGodown, setPhGodown] = useState(\"\");\r\n  const [phBatch, setPhBatch] = useState(\"\");\r\n  return (\r\n    <SideBarContext.Provider\r\n      value={{\r\n        phMfgDt,\r\n        setPhMfgDt,\r\n        phExpDt,\r\n        setphExpDt,\r\n        phGodown,\r\n        setPhGodown,\r\n        phBatch,\r\n        setPhBatch,\r\n        phUnit,\r\n        setPhUnit,\r\n        phQty,\r\n        setPhQty,\r\n        phRate,\r\n        setPhRate,\r\n        phValue,\r\n        setPhValue,\r\n        placeHolder2,\r\n        setPlaceHolder2,\r\n        isAlter,\r\n        phLot,\r\n        setPhLot,\r\n        setIsAlter,\r\n        titles,\r\n        setTitles,\r\n        labelOne,\r\n        setLabelOne,\r\n        labelTwo,\r\n        setLabelTwo,\r\n        placeHolder,\r\n        setPlaceHolder,\r\n        createGroup,\r\n        setCreateGroup,\r\n        labelThree,\r\n        setLabelThree,\r\n        createCategory,\r\n        setCreateCategory,\r\n        createItem,\r\n        setCreateItem,\r\n        createUnit,\r\n        setCreateUnit,\r\n        createGodown,\r\n        setCreateGodown,\r\n        show,\r\n        setShow,\r\n        create,\r\n        setCreate,\r\n        alter,\r\n        setAlter,\r\n        list,\r\n        setList,\r\n        book,\r\n        setBook,\r\n        showCreate,\r\n        setShowCreate,\r\n        underSelection,\r\n        setUnderSelection,\r\n        showBatchModal,\r\n        setShowBatchModal,\r\n      }}\r\n    >\r\n      {children}\r\n    </SideBarContext.Provider>\r\n  );\r\n};\r\n\r\nexport const StockAlterContext = createContext(\"\");\r\n\r\nexport const AlterContext = ({ children }) => {\r\n  const [showAlter, setShowAlter] = useState(false);\r\n  const [alterGroup, setAlterGroup] = useState(false);\r\n  const [alterCategory, setAlterCategory] = useState(false);\r\n  const [alterItem, setAlterItem] = useState(false);\r\n  const [alterUnit, setAlterUnit] = useState(false);\r\n  const [alterGodown, setAlterGodown] = useState(false);\r\n  const [docId, setDocId] = useState(\"\");\r\n  const [showDltModal, setShowDltModal] = useState(false);\r\n  const [presentCollection, setPresentCollection] = useState(\"\");\r\n  const [dltTitle, setDltTitle] = useState(\"\");\r\n  const [dltBody, setDltBody] = useState(\"\");\r\n  const [alterDate, setAlterDate] = useState(false);\r\n\r\n  const [listGroup, setListGroup] = useState(false);\r\n  const [listCategory, setListCategory] = useState(false);\r\n  const [listItem, setListItem] = useState(false);\r\n  const [listUnit, setListUnit] = useState(false);\r\n  const [listGodown, setListGodown] = useState(false);\r\n  const [listShow, setListShow] = useState(false);\r\n  return (\r\n    <StockAlterContext.Provider\r\n      value={{\r\n        listGroup,\r\n        setListGroup,\r\n        listCategory,\r\n        setListCategory,\r\n        listItem,\r\n        setListItem,\r\n        listGodown,\r\n        setListGodown,\r\n        listUnit,\r\n        setListUnit,\r\n        showAlter,\r\n        listShow,\r\n        setListShow,\r\n        docId,\r\n        setDocId,\r\n        setShowAlter,\r\n        alterGroup,\r\n        setAlterGroup,\r\n        alterCategory,\r\n        setAlterCategory,\r\n        alterItem,\r\n        setAlterItem,\r\n        alterUnit,\r\n        setAlterUnit,\r\n        alterGodown,\r\n        setAlterGodown,\r\n        showDltModal,\r\n        setShowDltModal,\r\n        presentCollection,\r\n        setPresentCollection,\r\n        dltTitle,\r\n        setDltTitle,\r\n        dltBody,\r\n        setDltBody,\r\n        alterDate,\r\n        setAlterDate,\r\n      }}\r\n    >\r\n      {children}\r\n    </StockAlterContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport \"./Inventory.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { SideBarContext } from \"../../store/SideMenuContext\";\r\nfunction InventorySideMenu() {\r\n  const navigate = useNavigate();\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col className=\"invColThree invCol d-flex justify-content-center text-center\">\r\n          <div className=\"colHeading d-flex justify-content-center\">\r\n            <Col className=\" menuListContainer menuList  \">\r\n              <Row className=\"d-flex text-align-center\">\r\n                <span>menu</span> <hr />\r\n              </Row>\r\n              <Row\r\n                onClick={() => {\r\n                  navigate(\"/arrivedmaterials\");\r\n                }}\r\n              >\r\n                <h6>Arrived Materials</h6>\r\n              </Row>\r\n              <Row>\r\n                <h6>Despatch Materials</h6>\r\n              </Row>\r\n\r\n              <Row\r\n                onClick={() => {\r\n                  navigate(\"/cutting\");\r\n                }}\r\n              >\r\n                <h6>Processing</h6>\r\n              </Row>\r\n              <Row\r\n                onClick={() => {\r\n                  navigate(\"/stockcreate\");\r\n                }}\r\n              >\r\n                <h6>Create Stock Item</h6>\r\n              </Row>\r\n              <Row>\r\n                <h6>Grading</h6>\r\n              </Row>\r\n              <Row>\r\n                <h6>Filling</h6>\r\n              </Row>\r\n              <Row>\r\n                <h6>Borma</h6>\r\n              </Row>\r\n            </Col>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InventorySideMenu;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\n\r\nfunction CkArrival() {\r\n    const [bags, setBags] = useState(\"\");\r\n    const [value, setValue] = useState('')\r\n    const [currentValue, setCurrentValue] = useState(\"\");\r\n    const FindPound = (value) => {\r\n        setCurrentValue(value);\r\n        const Pound = (value * 2.2) / bags;\r\n        setValue( parseFloat(Pound).toFixed(2)) \r\n    }\r\n    \r\n  \r\n  const [wholes, setWholes] = useState(\"\");\r\n//   const wholesPound = (wholes * 2.2) / bags;\r\n//   const wholesWithTwoDecimalPlaces = parseFloat(wholesPound).toFixed(2); \r\n\r\n    const [pieces, setPieces] = useState(\"\");\r\n  const [pwl, setPwl] = useState(\"\");\r\n  const [rej, setRej] = useState(\"\");\r\n  const [impOrLoc, setImpOrLoc] = useState(\"\");\r\n  const [origin, setOrigin] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"ck_ChildDiv\">\r\n        <Container className=\"rcnFormContainer\">\r\n          <Form\r\n          // noValidate validated={validated} onSubmit={handleSubmit}\r\n          >\r\n            <Row>\r\n              <Col>\r\n                <Form.Check\r\n                  // value={impOrLoc}\r\n                  value=\"local\"\r\n                  onChange={(e) => {\r\n                    setImpOrLoc(e.target.value);\r\n                  }}\r\n                  name=\"group1\"\r\n                  type=\"radio\"\r\n                  id=\"radioBtn\"\r\n                  label=\"Local\"\r\n                />\r\n                <Form.Check\r\n                  // value={impOrLoc}\r\n                  onChange={(e) => {\r\n                    setImpOrLoc(e.target.value);\r\n                  }}\r\n                  value=\"imported\"\r\n                  name=\"group1\"\r\n                  type=\"radio\"\r\n                  id=\"radioBtn\"\r\n                  label=\"Imported\"\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <Form.Group as={Col} controlId=\"formGridPlace\">\r\n                  <Form.Label>Orgin</Form.Label>\r\n                  <Form.Control\r\n                    value={origin}\r\n                    onChange={(e) => {\r\n                      setOrigin(e.target.value);\r\n                    }}\r\n                    type=\"place\"\r\n                    placeholder=\"Enter origin\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Group as={Col} controlId=\"formGridPlace\">\r\n                  <Form.Label>Bags</Form.Label>\r\n                  <Form.Control\r\n                    value={bags}\r\n                    onChange={(e) => {\r\n                      setBags(e.target.value);\r\n                    }}\r\n                    type=\"place\"\r\n                    placeholder=\"bags\"\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n              <Form.Group as={Col} controlId=\"formGridPlace\">\r\n                <Form.Label>Wholes</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  value={wholes}\r\n                  onChange={(e) => {\r\n                    setWholes(e.target.value);\r\n                    FindPound(e.target.value);\r\n                  }}\r\n                  type=\"place\"\r\n                  placeholder=\"Enter Arrived Place / Factory\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridInvoice\">\r\n                <Form.Label>-</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder={wholes == currentValue ? value : \"wait\"}\r\n                />\r\n              </Form.Group>\r\n            </Row>\r\n\r\n            <Row className=\"mb-3\">\r\n              <Form.Group as={Col} controlId=\"formGridPlace\">\r\n                <Form.Label>Pieces</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  value={pieces}\r\n                  onChange={(e) => {\r\n                    setPieces(e.target.value);\r\n                    FindPound(e.target.value);\r\n                  }}\r\n                  type=\"place\"\r\n                  placeholder=\"Enter Arrived Place / Factory\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridInvoice\">\r\n                <Form.Label>-</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder={pieces == currentValue ? value : \"wait\"}\r\n                />\r\n              </Form.Group>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridOuturn\">\r\n                <Form.Label>Pwl</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  value={pwl}\r\n                  onChange={(e) => {\r\n                    setPwl(e.target.value);\r\n                  }}\r\n                  placeholder=\"ex:count, outurn, rej\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                as={Col}\r\n                className=\"mb-3\"\r\n                controlId=\"formGridAddress2\"\r\n              >\r\n                <Form.Label>-</Form.Label>\r\n                <Form.Control placeholder=\"Ex : AP-00-AA-0000\" />\r\n              </Form.Group>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridOuturn\">\r\n                <Form.Label>Rej</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  value={rej}\r\n                  onChange={(e) => {\r\n                    setRej(e.target.value);\r\n                  }}\r\n                  placeholder=\"ex:count, outurn, rej\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                as={Col}\r\n                className=\"mb-3\"\r\n                controlId=\"formGridAddress2\"\r\n              >\r\n                <Form.Label>-</Form.Label>\r\n                <Form.Control placeholder=\"Ex : AP-00-AA-0000\" />\r\n              </Form.Group>\r\n            </Row>\r\n\r\n            <Form.Group className=\"mb-3\" id=\"formGridCheckbox \">\r\n              <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n            </Form.Group>\r\n            <Form.Group className=\"d-flex justify-content-center\">\r\n              <Button\r\n                variant=\"warning\"\r\n                // onClick={() => setShow(true)}\r\n              >\r\n                Preview\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </Container>\r\n        {/* ***************************modal***************************************** */}\r\n\r\n        {/* <Modal\r\n            show={show}\r\n            onHide={() => setShow(false)}\r\n            dialogClassName=\"modal-90w\"\r\n            aria-labelledby=\"example-custom-modal-styling-title\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                Please Check Your Details are Correct\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <p>\r\n                date: {date},<br />\r\n                lotNo: {lot},<br />\r\n                recivedGrade: {recived},<br />\r\n                importOrLocal:{impOrLoc},<br />\r\n                rcnMark: {mark},<br />\r\n                arrivedFrom: {arrived},<br />\r\n                invoiceNo: {invoice},<br />\r\n                outurn: {outurn},<br />\r\n                vehicleNo:{vehicle},<br />\r\n                bags: {bags},<br />\r\n                weight: {weight},<br />\r\n                remarks: {remarks},\r\n              </p>\r\n            </Modal.Body>\r\n          </Modal> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CkArrival;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nfunction MpArrival() {\r\n\r\n    const [bags, setBags] = useState(\"\");\r\n    const [value, setValue] = useState(\"\");\r\n    const [currentValue, setCurrentValue] = useState(\"\");\r\n    const FindPound = (value) => {\r\n      setCurrentValue(value);\r\n      const Pound = (value * 2.2) / bags;\r\n      setValue(parseFloat(Pound).toFixed(2));\r\n    };\r\n\r\n    const [wholes, setWholes] = useState(\"\");\r\n    //   const wholesPound = (wholes * 2.2) / bags;\r\n    //   const wholesWithTwoDecimalPlaces = parseFloat(wholesPound).toFixed(2);\r\n\r\n    const [pieces, setPieces] = useState(\"\");\r\n    const [pwl, setPwl] = useState(\"\");\r\n    const [rej, setRej] = useState(\"\");\r\n    const [impOrLoc, setImpOrLoc] = useState(\"\");\r\n    const [origin, setOrigin] = useState(\"\");\r\n    return (\r\n      <div>\r\n        <div className=\"mp_ChildDiv\">\r\n          <h4>Peeling Machine Kernels</h4><span>---------------------------------------------</span>\r\n          <Container className=\"mpFormContainer\">\r\n            <Form\r\n            // noValidate validated={validated} onSubmit={handleSubmit}\r\n            >\r\n              <Row>\r\n                <Col>\r\n                  <Form.Check\r\n                    // value={impOrLoc}\r\n                    value=\"local\"\r\n                    onChange={(e) => {\r\n                      setImpOrLoc(e.target.value);\r\n                    }}\r\n                    name=\"group1\"\r\n                    type=\"radio\"\r\n                    id=\"radioBtn\"\r\n                    label=\"Local\"\r\n                  />\r\n                  <Form.Check\r\n                    // value={impOrLoc}\r\n                    onChange={(e) => {\r\n                      setImpOrLoc(e.target.value);\r\n                    }}\r\n                    value=\"imported\"\r\n                    name=\"group1\"\r\n                    type=\"radio\"\r\n                    id=\"radioBtn\"\r\n                    label=\"Imported\"\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group as={Col} controlId=\"formGridPlace\">\r\n                    <Form.Label>Orgin</Form.Label>\r\n                    <Form.Control\r\n                      value={origin}\r\n                      onChange={(e) => {\r\n                        setOrigin(e.target.value);\r\n                      }}\r\n                      type=\"place\"\r\n                      placeholder=\"Enter origin\"\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Form.Group as={Col} controlId=\"formGridPlace\">\r\n                    <Form.Label>Bags</Form.Label>\r\n                    <Form.Control\r\n                      value={bags}\r\n                      onChange={(e) => {\r\n                        setBags(e.target.value);\r\n                      }}\r\n                      type=\"place\"\r\n                      placeholder=\"bags\"\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col} controlId=\"formGridPlace\">\r\n                  <Form.Label>Wholes</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    value={wholes}\r\n                    onChange={(e) => {\r\n                      setWholes(e.target.value);\r\n                      FindPound(e.target.value);\r\n                    }}\r\n                    type=\"place\"\r\n                    placeholder=\"Enter Arrived Place / Factory\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridInvoice\">\r\n                  <Form.Label>-</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={wholes == currentValue ? value : \"wait\"}\r\n                  />\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row className=\"mb-3\">\r\n                <Form.Group as={Col} controlId=\"formGridPlace\">\r\n                  <Form.Label>Pieces</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    value={pieces}\r\n                    onChange={(e) => {\r\n                      setPieces(e.target.value);\r\n                      FindPound(e.target.value);\r\n                    }}\r\n                    type=\"place\"\r\n                    placeholder=\"Enter Arrived Place / Factory\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridInvoice\">\r\n                  <Form.Label>-</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={pieces == currentValue ? value : \"wait\"}\r\n                  />\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Form.Group\r\n                  as={Col}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formGridOuturn\"\r\n                >\r\n                  <Form.Label>Pwl</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    value={pwl}\r\n                    onChange={(e) => {\r\n                      setPwl(e.target.value);\r\n                    }}\r\n                    placeholder=\"ex:count, outurn, rej\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group\r\n                  as={Col}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formGridAddress2\"\r\n                >\r\n                  <Form.Label>-</Form.Label>\r\n                  <Form.Control placeholder=\"Ex : AP-00-AA-0000\" />\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Form.Group\r\n                  as={Col}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formGridOuturn\"\r\n                >\r\n                  <Form.Label>Husk</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    value={rej}\r\n                    onChange={(e) => {\r\n                      setRej(e.target.value);\r\n                    }}\r\n                    placeholder=\"ex:count, outurn, rej\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group\r\n                  as={Col}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formGridAddress2\"\r\n                >\r\n                  <Form.Label>-</Form.Label>\r\n                  <Form.Control placeholder=\"Ex : AP-00-AA-0000\" />\r\n                </Form.Group>\r\n              </Row>\r\n\r\n              <Form.Group className=\"mb-3\" id=\"formGridCheckbox \">\r\n                <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n              </Form.Group>\r\n              <Form.Group className=\"d-flex justify-content-center\">\r\n                <Button\r\n                  variant=\"warning\"\r\n                  // onClick={() => setShow(true)}\r\n                >\r\n                  Preview\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n          </Container>\r\n          {/* ***************************modal***************************************** */}\r\n\r\n          {/* <Modal\r\n            show={show}\r\n            onHide={() => setShow(false)}\r\n            dialogClassName=\"modal-90w\"\r\n            aria-labelledby=\"example-custom-modal-styling-title\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                Please Check Your Details are Correct\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <p>\r\n                date: {date},<br />\r\n                lotNo: {lot},<br />\r\n                recivedGrade: {recived},<br />\r\n                importOrLocal:{impOrLoc},<br />\r\n                rcnMark: {mark},<br />\r\n                arrivedFrom: {arrived},<br />\r\n                invoiceNo: {invoice},<br />\r\n                outurn: {outurn},<br />\r\n                vehicleNo:{vehicle},<br />\r\n                bags: {bags},<br />\r\n                weight: {weight},<br />\r\n                remarks: {remarks},\r\n              </p>\r\n            </Modal.Body>\r\n          </Modal> */}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MpArrival\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\n\r\nfunction PkArrivals() {\r\n    const [bags, setBags] = useState(\"\");\r\n    const [value, setValue] = useState(\"\");\r\n    const [currentValue, setCurrentValue] = useState(\"\");\r\n    const FindPound = (value) => {\r\n      setCurrentValue(value);\r\n      const Pound = (value * 2.2) / bags;\r\n      setValue(parseFloat(Pound).toFixed(2));\r\n    };\r\n\r\n    const [wholes, setWholes] = useState(\"\");\r\n    //   const wholesPound = (wholes * 2.2) / bags;\r\n    //   const wholesWithTwoDecimalPlaces = parseFloat(wholesPound).toFixed(2);\r\n\r\n    const [pieces, setPieces] = useState(\"\");\r\n    const [pwl, setPwl] = useState(\"\");\r\n    const [rej, setRej] = useState(\"\");\r\n    const [impOrLoc, setImpOrLoc] = useState(\"\");\r\n    const [origin, setOrigin] = useState(\"\");\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"mp_ChildDiv\">\r\n          <h4>Peeled Kernels</h4>\r\n          <span>---------------------------------------------</span>\r\n          <Container className=\"mpFormContainer\">\r\n            <Form\r\n            // noValidate validated={validated} onSubmit={handleSubmit}\r\n            >\r\n              <Row>\r\n                <Col>\r\n                  <Form.Check\r\n                    // value={impOrLoc}\r\n                    value=\"local\"\r\n                    onChange={(e) => {\r\n                      setImpOrLoc(e.target.value);\r\n                    }}\r\n                    name=\"group1\"\r\n                    type=\"radio\"\r\n                    id=\"radioBtn\"\r\n                    label=\"Local\"\r\n                  />\r\n                  <Form.Check\r\n                    // value={impOrLoc}\r\n                    onChange={(e) => {\r\n                      setImpOrLoc(e.target.value);\r\n                    }}\r\n                    value=\"imported\"\r\n                    name=\"group1\"\r\n                    type=\"radio\"\r\n                    id=\"radioBtn\"\r\n                    label=\"Imported\"\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group as={Col} controlId=\"formGridPlace\">\r\n                    <Form.Label>Orgin</Form.Label>\r\n                    <Form.Control\r\n                      value={origin}\r\n                      onChange={(e) => {\r\n                        setOrigin(e.target.value);\r\n                      }}\r\n                      type=\"place\"\r\n                      placeholder=\"Enter origin\"\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Form.Group as={Col} controlId=\"formGridPlace\">\r\n                    <Form.Label>Bags</Form.Label>\r\n                    <Form.Control\r\n                      value={bags}\r\n                      onChange={(e) => {\r\n                        setBags(e.target.value);\r\n                      }}\r\n                      type=\"place\"\r\n                      placeholder=\"bags\"\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <h4>Wholes</h4>\r\n              <br />\r\n              <br />\r\n              {/* #####################  WHOLES  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    WW\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  WHOLES  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    SW\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  WHOLES  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    KN\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  WHOLES  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    PW\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  WHOLES  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    PUK\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  WHOLES  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    FW\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  total  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    Total\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              <h4>Pieces</h4>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    S\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    P\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    SP\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    WSP\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    SS\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    SSP\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    JP\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    PLP\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    VK\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    K I\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    K II\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    REJ\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    KTP\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    PUKP\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    Total\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n            </Form>\r\n          </Container>\r\n          {/* ***************************modal***************************************** */}\r\n\r\n          {/* <Modal\r\n            show={show}\r\n            onHide={() => setShow(false)}\r\n            dialogClassName=\"modal-90w\"\r\n            aria-labelledby=\"example-custom-modal-styling-title\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                Please Check Your Details are Correct\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <p>\r\n                date: {date},<br />\r\n                lotNo: {lot},<br />\r\n                recivedGrade: {recived},<br />\r\n                importOrLocal:{impOrLoc},<br />\r\n                rcnMark: {mark},<br />\r\n                arrivedFrom: {arrived},<br />\r\n                invoiceNo: {invoice},<br />\r\n                outurn: {outurn},<br />\r\n                vehicleNo:{vehicle},<br />\r\n                bags: {bags},<br />\r\n                weight: {weight},<br />\r\n                remarks: {remarks},\r\n              </p>\r\n            </Modal.Body>\r\n          </Modal> */}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default PkArrivals;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\n export const TopBarContext = createContext(\"\");\r\n\r\n\r\nexport const TopContext = ({ children }) => {\r\n  const [recived, setRecived] = useState(\"\");\r\n  const [recivedFrom, setRecivedFrom] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [lot, setLot] = useState(\"\");\r\n  const [validated, setValidated] = useState(false);\r\n  \r\n  return (\r\n    <TopBarContext.Provider\r\n      value={{\r\n        recived,\r\n        setRecived,\r\n        recivedFrom,\r\n        setRecivedFrom,\r\n        date,\r\n        setDate,\r\n        lot,\r\n        setLot,\r\n        validated,\r\n        setValidated,\r\n      }}\r\n    >\r\n      {children}\r\n    </TopBarContext.Provider>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  InputGroup,\r\n  Modal,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport { TopBarContext } from \"../store/ArrivalsContext\";\r\n\r\nimport { FirebaseContext } from \"../store/Context\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  doc,\r\n  getDoc,\r\n  setDoc,\r\n} from \"firebase/firestore\";\r\n\r\nimport \"./RcnArrival.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../store/Context\";\r\nimport { useEffect } from \"react\";\r\nfunction RcnArrival() {\r\n  const { userDtls } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const { recived, date, lot, validated, setValidated } =\r\n    useContext(TopBarContext);\r\n  const [impOrLoc, setImpOrLoc] = useState(\"\");\r\n  const [mark, setMark] = useState(\"\");\r\n  const [arrived, setArrived] = useState(\"\");\r\n  const [invoice, setInvoice] = useState(\"\");\r\n  const [outurn, setOuturn] = useState(\"\");\r\n  const [vehicle, setVehicle] = useState(\"\");\r\n  const [bags, setBags] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [remarks, setRemarks] = useState(\"\");\r\n  const [user, setUser] = useState();\r\n  const { db } = useContext(FirebaseContext);\r\n  const [show, setShow] = useState(false);\r\n  const [userDetails, setUserDetails] = useState(\"\");\r\n  const [currentUser, setCurrentUser] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(\"valid\", form.checkValidity());\r\n    if (form.checkValidity() === true) {\r\n      const RcnArrivalRef = collection(db, \"RcnArrivels\");\r\n      setDoc(doc(RcnArrivalRef), {\r\n        createdBy: userDetails,\r\n        date: date,\r\n        lotNo: lot,\r\n        recivedGrade: recived,\r\n        importOrLocal: impOrLoc,\r\n        rcnMark: mark,\r\n        arrivedFrom: arrived,\r\n        invoiceNo: invoice,\r\n        outurn: outurn,\r\n        vehicleNo: vehicle,\r\n        bags: bags,\r\n        weight: weight,\r\n        remarks: remarks,\r\n      })\r\n        .then(() => {\r\n          addDoc(collection(db, \"Stock Items\"), {\r\n            itemName: \"Raw Cashew Nuts\",\r\n            under: impOrLoc,\r\n            createdBy: userDetails,\r\n            date: date,\r\n            lotNo: lot,\r\n            recivedGrade: recived,\r\n            importOrLocal: impOrLoc,\r\n            rcnMark: mark,\r\n            arrivedFrom: arrived,\r\n            invoiceNo: invoice,\r\n            outurn: outurn,\r\n            vehicleNo: vehicle,\r\n            bags: bags,\r\n            quantity: parseInt(weight),\r\n            remarks: remarks,\r\n          });\r\n        })\r\n        .then(() => {\r\n          addDoc(collection(db, \"RcnStock\"), {\r\n            createdBy: userDetails,\r\n            itemName: recived,\r\n            Quantity: bags,\r\n            weight: weight,\r\n          });\r\n        })\r\n        .then(() => {\r\n          alert(\"submitted sucsessfull\");\r\n          navigate(\"/stockreg\");\r\n        });\r\n    } else {\r\n      alert(\"please check curreption\");\r\n    }\r\n  };\r\n  const [dweight, setDweight] = useState();\r\n\r\n  const onChange = (value) => {\r\n    const defwight = value * 80;\r\n    setDweight(defwight);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUserDetails(userDtls.uid);\r\n  }, [userDtls]);\r\n\r\n  // ***************fIREBASE USER dETAILS*******************************\r\n  useEffect(() => {\r\n    const idString = userDtls.uid.toString();\r\n    const getUser = async () => {\r\n      const docRef = doc(db, \"users\", idString);\r\n      const docSnap = await getDoc(docRef);\r\n\r\n      if (docSnap.exists()) {\r\n        setCurrentUser(docSnap.data());\r\n        console.log(\"Document data:\", docSnap.data());\r\n      } else {\r\n        // doc.data() will be undefined in this case\r\n        console.log(\"No such document!\");\r\n      }\r\n    };\r\n\r\n    getUser();\r\n  }, [db]);\r\n  console.log(\"hello\", user);\r\n  console.log(\"heyyyy\", currentUser.company);\r\n  return (\r\n    <div className=\"rcnArrival_ParentDiv\">\r\n      <div className=\"rcnArrival_ChildDiv\">\r\n        <Container className=\"rcnFormContainer\">\r\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Row>\r\n              <Col>\r\n                <Form.Check\r\n                  required\r\n                  // value={impOrLoc}\r\n                  value=\"LOCAL RCN\"\r\n                  onChange={(e) => {\r\n                    setImpOrLoc(e.target.value);\r\n                  }}\r\n                  name=\"group1\"\r\n                  type=\"radio\"\r\n                  id=\"radioBtn\"\r\n                  label=\"Local\"\r\n                />\r\n                <Form.Check\r\n                  required\r\n                  // value={impOrLoc}\r\n                  onChange={(e) => {\r\n                    setImpOrLoc(e.target.value);\r\n                  }}\r\n                  value=\"IMPORTED RCN\"\r\n                  name=\"group1\"\r\n                  type=\"radio\"\r\n                  id=\"radioBtn\"\r\n                  label=\"Imported\"\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Col>\r\n              <Form.Group as={Col} controlId=\"formGridPlace\">\r\n                <Form.Label>Mark</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  value={mark}\r\n                  onChange={(e) => {\r\n                    setMark(e.target.value);\r\n                  }}\r\n                  type=\"place\"\r\n                  placeholder=\"Enter Mark\"\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Example: Ghana/ IVC/ GunniaBissavu\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n              <Form.Group as={Col} controlId=\"formGridPlace\">\r\n                <Form.Label>Arrived From</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  value={arrived}\r\n                  onChange={(e) => {\r\n                    setArrived(e.target.value);\r\n                  }}\r\n                  type=\"place\"\r\n                  placeholder=\"Enter Arrived Place / Factory\"\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  where did arrived this material\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridInvoice\">\r\n                <Form.Label>Invoice #</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  value={invoice}\r\n                  onChange={(e) => {\r\n                    setInvoice(e.target.value);\r\n                  }}\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Invoice Number\"\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Enter Invoice No. or Delivery Chellan No.\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Row>\r\n            <Row>\r\n              <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridOuturn\">\r\n                <Form.Label>Outurn</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  value={outurn}\r\n                  onChange={(e) => {\r\n                    setOuturn(e.target.value);\r\n                  }}\r\n                  placeholder=\"ex:count, outurn, rej\"\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  please enter sample cutting outurn\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                as={Col}\r\n                className=\"mb-3\"\r\n                controlId=\"formGridAddress2\"\r\n              >\r\n                <Form.Label>Vehicle No.</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  value={vehicle}\r\n                  onChange={(e) => {\r\n                    setVehicle(e.target.value);\r\n                  }}\r\n                  placeholder=\"Ex : AP-00-AA-0000\"\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  please enter Vehicle /Truck / Lorry Number\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Row>\r\n\r\n            <Row className=\"mb-3\">\r\n              <Form.Group as={Col} controlId=\"formGridCity\">\r\n                <Form.Label>Bags #</Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    required\r\n                    value={bags}\r\n                    onChange={(e) => {\r\n                      setBags(e.target.value);\r\n                      onChange(e.target.value);\r\n                    }}\r\n                    placeholder=\"No. of Bags\"\r\n                    type=\"number\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                  />\r\n                  <InputGroup.Text id=\"basic-addon1\">Bags</InputGroup.Text>\r\n                </InputGroup>\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  please enter No. of bags\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridState\">\r\n                <Form.Label>Net Weight</Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    required\r\n                    value={weight}\r\n                    onChange={(e) => {\r\n                      setWeight(e.target.value);\r\n                    }}\r\n                    placeholder={dweight}\r\n                    type=\"accounting\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                  />\r\n                  <InputGroup.Text id=\"basic-addon1\">Kgs</InputGroup.Text>\r\n                </InputGroup>\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  please enter Net weight\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridZip\">\r\n                <Form.Label>Remarks</Form.Label>\r\n                <Form.Control\r\n                  value={remarks}\r\n                  onChange={(e) => {\r\n                    setRemarks(e.target.value);\r\n                  }}\r\n                  placeholder=\"Enter Your Remarks\"\r\n                />\r\n              </Form.Group>\r\n            </Row>\r\n\r\n            <Form.Group className=\"mb-3\" id=\"formGridCheckbox \">\r\n              <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n            </Form.Group>\r\n            <Form.Group className=\"d-flex justify-content-center\">\r\n              <Button variant=\"warning\" onClick={() => setShow(true)}>\r\n                Preview\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </Container>\r\n        {/* ***************************modal***************************************** */}\r\n\r\n        <Modal\r\n          show={show}\r\n          onHide={() => setShow(false)}\r\n          dialogClassName=\"modal-90w\"\r\n          aria-labelledby=\"example-custom-modal-styling-title\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-custom-modal-styling-title\">\r\n              Please Check Your Details are Correct\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Table striped bordered hover>\r\n              <tbody>\r\n                <tr>\r\n                  <th>Date</th>\r\n                  <td>{date ? date : \"!!!Enter This Field\"}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Lot No.</th>\r\n                  <td>{lot ? lot : \"!!!Enter This Field\"}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Grade</th>\r\n                  <td>{recived}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Origin</th>\r\n                  <td>{impOrLoc}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Country</th>\r\n                  <td>{mark}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Arrived From</th>\r\n                  <td>{arrived}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Invoice No.</th>\r\n                  <td>{invoice}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Outurn</th>\r\n                  <td>{outurn}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Vehicle No.</th>\r\n                  <td>{vehicle}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>No. of Bags</th>\r\n                  <td>{bags}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Net Weight</th>\r\n                  <td>{weight ? weight : \"!!!Enter this Field\"}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Remarks.</th>\r\n                  <td>{remarks}</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RcnArrival;\r\n","\r\nimport React, { useState } from \"react\";\r\nimport { Col, Container, Form, Row } from \"react-bootstrap\";\r\nfunction GkArrivals() {\r\n    const [bags, setBags] = useState(\"\");\r\n    const [value, setValue] = useState(\"\");\r\n    const [currentValue, setCurrentValue] = useState(\"\");\r\n    const FindPound = (value) => {\r\n      setCurrentValue(value);\r\n      const Pound = (value * 2.2) / bags;\r\n      setValue(parseFloat(Pound).toFixed(2));\r\n    };\r\n\r\n    const [wholes, setWholes] = useState(\"\");\r\n    //   const wholesPound = (wholes * 2.2) / bags;\r\n    //   const wholesWithTwoDecimalPlaces = parseFloat(wholesPound).toFixed(2);\r\n\r\n    const [pieces, setPieces] = useState(\"\");\r\n    const [pwl, setPwl] = useState(\"\");\r\n    const [rej, setRej] = useState(\"\");\r\n    const [impOrLoc, setImpOrLoc] = useState(\"\");\r\n    const [origin, setOrigin] = useState(\"\");\r\n    return (\r\n      <div>\r\n        <div className=\"mp_ChildDiv\">\r\n          <h4>Peeled Kernels</h4>\r\n          <span>---------------------------------------------</span>\r\n          <Container className=\"mpFormContainer\">\r\n            <Form\r\n            // noValidate validated={validated} onSubmit={handleSubmit}\r\n            >\r\n              <Row>\r\n                <Col>\r\n                  <Form.Check\r\n                    // value={impOrLoc}\r\n                    value=\"local\"\r\n                    onChange={(e) => {\r\n                      setImpOrLoc(e.target.value);\r\n                    }}\r\n                    name=\"group1\"\r\n                    type=\"radio\"\r\n                    id=\"radioBtn\"\r\n                    label=\"Local\"\r\n                  />\r\n                  <Form.Check\r\n                    // value={impOrLoc}\r\n                    onChange={(e) => {\r\n                      setImpOrLoc(e.target.value);\r\n                    }}\r\n                    value=\"imported\"\r\n                    name=\"group1\"\r\n                    type=\"radio\"\r\n                    id=\"radioBtn\"\r\n                    label=\"Imported\"\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group as={Col} controlId=\"formGridPlace\">\r\n                    <Form.Label>Orgin</Form.Label>\r\n                    <Form.Control\r\n                      value={origin}\r\n                      onChange={(e) => {\r\n                        setOrigin(e.target.value);\r\n                      }}\r\n                      type=\"place\"\r\n                      placeholder=\"Enter origin\"\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Form.Group as={Col} controlId=\"formGridPlace\">\r\n                    <Form.Label>Bags</Form.Label>\r\n                    <Form.Control\r\n                      value={bags}\r\n                      onChange={(e) => {\r\n                        setBags(e.target.value);\r\n                      }}\r\n                      type=\"place\"\r\n                      placeholder=\"bags\"\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <h4>Wholes</h4>\r\n              <br />\r\n              <br />\r\n              {/* #####################  WHOLES  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    WW\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  WHOLES  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    SW\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  WHOLES  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    KN\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  WHOLES  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    PW\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  WHOLES  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    PUK\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  WHOLES  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    FW\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  total  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    Total\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              <h4>Pieces</h4>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    S\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    P\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    SP\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    WSP\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    SS\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    SSP\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    JP\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    PLP\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    VK\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    K I\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    K II\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    REJ\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    KTP\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    PUKP\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n              {/* #####################  Pieces  ############################# */}\r\n              <Row className=\"mb-3\">\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextPassword\"\r\n                >\r\n                  <Form.Label column sm=\"2\">\r\n                    Total\r\n                  </Form.Label>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                  <Col sm=\"3\">\r\n                    <Form.Control type=\"text\" placeholder=\"Kgs\" />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Row>\r\n            </Form>\r\n          </Container>\r\n          {/* ***************************modal***************************************** */}\r\n\r\n          {/* <Modal\r\n            show={show}\r\n            onHide={() => setShow(false)}\r\n            dialogClassName=\"modal-90w\"\r\n            aria-labelledby=\"example-custom-modal-styling-title\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                Please Check Your Details are Correct\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <p>\r\n                date: {date},<br />\r\n                lotNo: {lot},<br />\r\n                recivedGrade: {recived},<br />\r\n                importOrLocal:{impOrLoc},<br />\r\n                rcnMark: {mark},<br />\r\n                arrivedFrom: {arrived},<br />\r\n                invoiceNo: {invoice},<br />\r\n                outurn: {outurn},<br />\r\n                vehicleNo:{vehicle},<br />\r\n                bags: {bags},<br />\r\n                weight: {weight},<br />\r\n                remarks: {remarks},\r\n              </p>\r\n            </Modal.Body>\r\n          </Modal> */}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default GkArrivals\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport CkArrival from \"../../Components/CkArrival\";\r\nimport MpArrival from \"../../Components/MpArrival\";\r\nimport PkArrivals from \"../../Components/PkArrivals\";\r\nimport RcnArrival from \"../../Components/RcnArrival\";\r\nimport { SideBarContext } from \"../../store/SideMenuContext\";\r\nimport { TopBarContext } from \"../../store/ArrivalsContext\";\r\nimport \"./ArrivedMaterials.css\";\r\nimport GkArrivals from \"../../Components/GkArrivals\";\r\n\r\nfunction ArrivedMaterials() {\r\n  const { recived } = useContext(TopBarContext);\r\n\r\n  // const [value, setValue] = useState()\r\n  // if (recived == \"Row Cashew Nuts\") {\r\n  //   setValue(\"Row Cashew Nuts\");\r\n  // } else if (recived == \"Cutting Kernels\") {\r\n  //   setValue(\"Cutting Kernels\");\r\n  // }\r\n  //const [arrived, setArrived] = useState()\r\n\r\n  // const sidebar1 = sidebar;\r\n  // useEffect(() => {\r\n\r\n  //   // if () { }\r\n  //   // else if(){}\r\n  //   return () => {\r\n\r\n  //   }\r\n  // }, [])\r\n  // const [number, setNumber] = useState(0);\r\n\r\n  // function handleEnter(event) {\r\n  //   if (event.keyCode === 13) {\r\n  //     const form = event.target.form;\r\n  //     const index = Array.prototype.indexOf.call(form, event.target);\r\n  //     form.elements[index + 1].focus();\r\n  //     event.preventDefault();\r\n  //   } else if (event.keyCode === 37) {\r\n  //     const form = event.target.form;\r\n  //     const index = Array.prototype.indexOf.call(form, event.target);\r\n  //     form.elements[index - 1].focus();\r\n  //     event.preventDefault();\r\n  //   } else if (event.keyCode === 40) {\r\n  //     setNumber(number + 1);\r\n  //     event.preventDefault();\r\n  //   } else if (event.keyCode === 46) {\r\n  //     setNumber(number - 1);\r\n  //     event.preventDefault();\r\n  //   } else if (event.keyCode === 39) {\r\n  //     const form = event.target.form;\r\n  //     const index = Array.prototype.indexOf.call(form, event.target);\r\n  //     form.elements[index + 1].focus();\r\n  //     event.preventDefault();\r\n  //     console.log(form);\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div className=\"arrived_ParentDiv\">\r\n      <div className=\"arrived_ChildDiv\">\r\n        {/* <GkArrivals /> */}\r\n        {recived == \"Row Cashew Nuts\" ? <RcnArrival /> : \"\"}\r\n        {recived == \"Cutting Kernels\" ? <CkArrival /> : \"\"}\r\n        {recived == \"Peeling Machine\" ? <MpArrival /> : \"\"}\r\n        {recived == \"Peeled Kernels\" ? <PkArrivals /> : \"\"}\r\n        {recived == \"Graded Kernels\" ? <GkArrivals /> : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArrivedMaterials;\r\n","import React, { useContext} from 'react'\r\nimport { Col, Container, Form, Row } from 'react-bootstrap';\r\nimport {TopBarContext} from '../../store/ArrivalsContext'\r\n\r\nfunction ArrivalsTopBar() {\r\n  const { recived, setRecived,recivedFrom,setRecivedFrom, date, setDate, lot, setLot, validated } =\r\n    useContext(TopBarContext);\r\n\r\n  \r\n    return (\r\n      <div>\r\n        <div className=\"topBar_childDiv\">\r\n          <div className=\"topBar_Content\">\r\n            <Container>\r\n              <Form noValidate validated={validated}>\r\n                <Row>\r\n                  <Col xs={12} md={3}>\r\n                    <div>\r\n                      <Form.Group className=\"mb-3\" controlId=\"formBasicRecived\">\r\n                        <Form.Label>Recived</Form.Label>\r\n                        <Form.Select\r\n                          required\r\n                          size=\"sm\"\r\n                          value={recived}\r\n                          onChange={(e) => setRecived(e.target.value)}\r\n                        >\r\n                          <option>Select One...</option>\r\n                          <option>Row Cashew Nuts</option>\r\n                          <option>Cutting Kernels</option>\r\n                          <option>Peeling Machine</option>\r\n                          <option>Peeled Kernels</option>\r\n                          <option>Graded Kernels</option>\r\n                          <option>Finished Kernels</option>\r\n                        </Form.Select>\r\n                        <Form.Control.Feedback>\r\n                          Please Confirm this field is not empty\r\n                        </Form.Control.Feedback>\r\n                      </Form.Group>\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <Col xs={12} md={3}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicLot\">\r\n                      <Form.Label>Recived From</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        value={recivedFrom}\r\n                        onChange={(e) => setRecivedFrom(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"factory name..\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs={6} md={3}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicLot\">\r\n                      <Form.Label>Lot #</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        value={lot}\r\n                        onChange={(e) => setLot(e.target.value)}\r\n                        type=\"text\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col xs={6} md={3}>\r\n                    <Form.Group\r\n                      className=\"mb-3\"\r\n                      controlId=\"exampleForm.ControlInput1\"\r\n                    >\r\n                      <Form.Label>Date</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        value={date}\r\n                        onChange={(e) => setDate(e.target.value)}\r\n                        type=\"date\"\r\n                      />\r\n                    </Form.Group>\r\n                    {/* <InputGroup className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Date</Form.Label>\r\n                <Form.Control\r\n                  className=\"text-center mt-5 mb-4\"\r\n                  md={1}\r\n                  type=\"text\"\r\n                  defaultValue={date}\r\n                />\r\n               </InputGroup> */}\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\nexport default ArrivalsTopBar\r\n","import React from 'react'\r\nimport  NavbarHeader  from '../../Components/Navbar'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport InventorySideMenu from '../../containers/inventory/InventorySideMenu'\r\nimport ArrivedMaterials from '../../containers/inventory/ArrivedMaterials'\r\nimport ArrivalsTopBar from '../../containers/inventory/ArrivalsTopBar';\r\n\r\nimport {TopContext} from '../../store/ArrivalsContext'\r\nfunction ArrivedMaterialsPage() {\r\n    return (\r\n      <div className=\"arrivedMaterials_ParentDiv\">\r\n        <div className=\"arrivedMaterials_ChildDiv\">\r\n          <TopContext>\r\n          <NavbarHeader />\r\n            <ArrivalsTopBar />\r\n          <Container>\r\n            <Row>\r\n              <Col md={12} lg={12} sm={12}>\r\n                <ArrivedMaterials />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          </TopContext>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ArrivedMaterialsPage\r\n","import { collection, getDocs } from 'firebase/firestore';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Container, Table } from 'react-bootstrap'\r\nimport { FirebaseContext } from '../../store/Context';\r\n\r\nfunction StockRegister() {\r\n\r\n    const [rcnStock, setRcnStock] = useState([]);\r\n    const { db } = useContext(FirebaseContext);\r\n    useEffect(() => {\r\n      const getRcnStock = async () => {\r\n        const RcnStockData = await getDocs(collection(db, \"RcnArrivels\"));\r\n        setRcnStock(\r\n          RcnStockData.docs.map((doc) => ({\r\n            ...doc.data(),\r\n          }))\r\n        );\r\n        \r\n      };\r\n      getRcnStock();\r\n    }, [db,rcnStock]);\r\n    return (\r\n      <div>\r\n        <h5>RCN STOCK</h5>\r\n        <Container>\r\n          <Table striped bordered hover variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Lot #</th>\r\n                <th>Local/Import</th>\r\n                <th>Mark</th>\r\n                <th>Outurn</th>\r\n                <th>Bags</th>\r\n                <th>Net Weight</th>\r\n              </tr>\r\n            </thead>\r\n            {rcnStock.map((obj, index) => (\r\n              <tbody>\r\n                <tr>\r\n                  <td>{index + 1}</td>\r\n                  <td>{obj.lotNo}</td>\r\n                  <td>{obj.importOrLocal}</td>\r\n                  <td>{obj.rcnMark}</td>\r\n                  <td>{obj.outurn}</td>\r\n                  <td>{obj.bags}</td>\r\n                  <td>{obj.weight}</td>\r\n                </tr>\r\n              </tbody>\r\n            ))}\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default StockRegister\r\n","import React from 'react'\r\nimport StockRegister from '../../containers/inventory/StockRegister'\r\nimport NavbarHeader from '../../Components/Navbar'\r\nfunction StockRegisterPage() {\r\n    return (\r\n        <div>\r\n            <NavbarHeader/>\r\n            <StockRegister/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StockRegisterPage\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport './TypeAhead.css'\r\n\r\n\r\nfunction TypeAhead() {\r\nconst [singleSelections, setSingleSelections] = useState([]);\r\nconst options = [\r\n  \"alahabad\",\r\n  \"bsada\",\r\n  \"Apple\",\r\n  \"Banana\",\r\n  \"Orange\",\r\n  \"Apple\",\r\n  \"Banana\",\r\n  \"Orange\",\r\n];\r\n\r\n    return (\r\n        <div className='typeAhead_parentDiv'>\r\n            \r\n        <Typeahead\r\n          id=\"basic-typeahead-single\"\r\n          labelKey=\"name\"\r\n          onChange={setSingleSelections}\r\n          options={options}\r\n          placeholder=\"Items ...\"\r\n          selected={singleSelections}\r\n        />\r\n   \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default TypeAhead;\r\n","import React, { useState } from \"react\";\r\nimport { Col, Container, Form, InputGroup, Row } from \"react-bootstrap\";\r\nimport TypeAhead from \"../../Components/TypeAhead\";\r\n\r\nimport \"./Inventory.css\";\r\n\r\nfunction ProcessingInput() {\r\n  const [number, setNumber] = useState(0);\r\n  const [pressed, setPressed] = useState(1);\r\n  const [press, setPress] = useState(false);\r\n  \r\n\r\n\r\n  function handleEnter(event) {\r\n    if (event.keyCode === 13 && press == false) {\r\n      const form = event.target.form;\r\n      const index = Array.prototype.indexOf.call(form, event.target);\r\n      form.elements[index + 1].focus();\r\n      event.preventDefault();\r\n      console.log(\"formmmm\", index);\r\n      setPressed(pressed + 1);\r\n      if (pressed == 2) {\r\n        setPress(true);\r\n      }\r\n    } else if (event.keyCode === 37) {\r\n      const form = event.target.form;\r\n      const index = Array.prototype.indexOf.call(form, event.target);\r\n      if (index > 0) {\r\n        form.elements[index - 1].focus();\r\n      }\r\n\r\n      event.preventDefault();\r\n    } else if (event.keyCode === 40) {\r\n      setNumber(number + 1);\r\n      event.preventDefault();\r\n      setPressed(pressed === -1);\r\n      setPress(false);\r\n    } else if (event.keyCode === 46) {\r\n      setNumber(number - 1);\r\n      event.preventDefault();\r\n    } else if (event.keyCode === 39) {\r\n      const form = event.target.form;\r\n      const index = Array.prototype.indexOf.call(form, event.target);\r\n      form.elements[index + 1].focus();\r\n\r\n      event.preventDefault();\r\n      console.log(\"formmmm\", form);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"inv_ChildDiv\">\r\n        <Container>\r\n          <Row>\r\n            {/* ****************INPUT************************************************* */}\r\n            <Col className=\"invColOne invCol \">\r\n              <div className=\"colHeading d-flex justify-content-center\">\r\n                <span>Input</span>\r\n              </div>\r\n              <hr />\r\n              <div className=\"inputContent\">\r\n                <Form id=\"inputForm\">\r\n                  <Row className=\"inputRow\">\r\n                    <Col>\r\n                      <TypeAhead/>\r\n                        \r\n                      {/* <Form.Control\r\n                        onKeyDown={handleEnter}\r\n                        md={3}\r\n                        lg={3}\r\n                        sm={3}\r\n                        type=\"text\"\r\n                      /> */}\r\n                    </Col>\r\n                    <Col>\r\n                      <InputGroup>\r\n                        <InputGroup.Text id=\"basic-addon1\">Lot</InputGroup.Text>\r\n                        <Form.Control\r\n                          onKeyDown={handleEnter}\r\n                          md={1}\r\n                          type=\"text\"\r\n                          aria-describedby=\"basic-addon1\"\r\n                        />\r\n                      </InputGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <InputGroup>\r\n                        <Form.Control\r\n                          onKeyDown={handleEnter}\r\n                          md={1}\r\n                          lg={1}\r\n                          sm={1}\r\n                          type=\"text\"\r\n                          aria-describedby=\"basic-addon2\"\r\n                        />\r\n                        <InputGroup.Text id=\"basic-addon2\">Kgs</InputGroup.Text>\r\n                      </InputGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  {/* {number.map((obj)=>( */}\r\n                  {[...Array(number)].map((elementInArray, index) => (\r\n                    <Row className=\"inputRow\">\r\n                      <Col>\r\n                        <Form.Control\r\n                          onKeyDown={handleEnter}\r\n                          md={3}\r\n                          lg={3}\r\n                          sm={3}\r\n                          type=\"text\"\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <InputGroup>\r\n                          <InputGroup.Text id=\"basic-addon1\">\r\n                            Lot\r\n                          </InputGroup.Text>\r\n                          <Form.Control\r\n                            onKeyDown={handleEnter}\r\n                            md={1}\r\n                            type=\"text\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                          />\r\n                        </InputGroup>\r\n                      </Col>\r\n                      <Col>\r\n                        <InputGroup>\r\n                          <Form.Control\r\n                            onKeyDown={handleEnter}\r\n                            md={1}\r\n                            lg={1}\r\n                            sm={1}\r\n                            type=\"text\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                          />\r\n\r\n                          <InputGroup.Text id=\"basic-addon2\">\r\n                            Kgs\r\n                          </InputGroup.Text>\r\n                        </InputGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  ))}\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProcessingInput;\r\n","import React, { useState } from \"react\";\r\nimport { Col, Container, Form, InputGroup, Row } from \"react-bootstrap\";\r\nimport TypeAhead from \"../../Components/TypeAhead\";\r\n\r\nimport \"./Inventory.css\";\r\n\r\nfunction ProcessingOutput() {\r\n  const [number, setNumber] = useState(0);\r\n  const [pressed, setPressed] = useState(1);\r\n  const [press, setPress] = useState(false);\r\n// const options = [\r\n//   \"alahabad\",\r\n//   \"bsada\",\r\n//   \"Apple\",\r\n//   \"Banana\",\r\n//   \"Orange\",\r\n//   \"Apple\",\r\n//   \"Banana\",\r\n//   \"Orange\",\r\n// ];\r\n  function handleEnter(event) {\r\n    if (event.keyCode === 13 && press === false) {\r\n      const form = event.target.form;\r\n      const index = Array.prototype.indexOf.call(form, event.target);\r\n      form.elements[index + 1].focus();\r\n      event.preventDefault();\r\n      console.log(\"formmmm\", index);\r\n      setPressed(pressed + 1);\r\n      if (pressed === 2) {\r\n        setPress(true);\r\n      }\r\n    } else if (event.keyCode === 37) {\r\n      const form = event.target.form;\r\n      const index = Array.prototype.indexOf.call(form, event.target);\r\n      if (index > 0) {\r\n        form.elements[index - 1].focus();\r\n      }\r\n\r\n      event.preventDefault();\r\n      setPressed(pressed - 1);\r\n    } else if (event.keyCode === 40) {\r\n      setNumber(number + 1);\r\n      event.preventDefault();\r\n      setPressed(pressed === -1);\r\n      setPress(false);\r\n    } else if (event.keyCode === 46) {\r\n      setNumber(number - 1);\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"inv_ChildDiv\">\r\n        <Container>\r\n          <Row>\r\n            {/* ****************OUTPUT************************************************* */}\r\n            <Col className=\"invColOne invCol \">\r\n              <div className=\"colHeading d-flex justify-content-center\">\r\n                <span>Output</span>\r\n              </div>\r\n              <hr />\r\n              <div className=\"inputContent\">\r\n                <Form id=\"inputForm\">\r\n                  <Row className=\"inputRow\">\r\n                    <Col>\r\n                      <TypeAhead/>\r\n                      {/* <Form.Control\r\n                        onKeyDown={handleEnter}\r\n                        md={3}\r\n                        lg={3}\r\n                        sm={3}\r\n                        type=\"text\"\r\n                      /> */}\r\n                    </Col>\r\n                    <Col>\r\n                      <InputGroup>\r\n                        <InputGroup.Text id=\"basic-addon1\">Lot</InputGroup.Text>\r\n                        <Form.Control\r\n                          onKeyDown={handleEnter}\r\n                          md={1}\r\n                          type=\"text\"\r\n                          aria-describedby=\"basic-addon1\"\r\n                        />\r\n                      </InputGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <InputGroup>\r\n                        <Form.Control\r\n                          onKeyDown={handleEnter}\r\n                          md={1}\r\n                          lg={1}\r\n                          sm={1}\r\n                          type=\"text\"\r\n                          aria-describedby=\"basic-addon2\"\r\n                        />\r\n                        <InputGroup.Text id=\"basic-addon2\">Kgs</InputGroup.Text>\r\n                      </InputGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  {/* {number.map((obj)=>( */}\r\n                  {[...Array(number)].map((elementInArray, index) => (\r\n                    <Row className=\"inputRow\">\r\n                      <Col>\r\n                        <Form.Control\r\n                          onKeyDown={handleEnter}\r\n                          md={3}\r\n                          lg={3}\r\n                          sm={3}\r\n                          type=\"text\"\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <InputGroup>\r\n                          <InputGroup.Text id=\"basic-addon1\">\r\n                            Lot\r\n                          </InputGroup.Text>\r\n                          <Form.Control\r\n                            onKeyDown={handleEnter}\r\n                            md={1}\r\n                            type=\"text\"\r\n                            aria-describedby=\"basic-addon1\"\r\n                          />\r\n                        </InputGroup>\r\n                      </Col>\r\n                      <Col>\r\n                        <InputGroup>\r\n                          <Form.Control\r\n                            onKeyDown={handleEnter}\r\n                            md={1}\r\n                            lg={1}\r\n                            sm={1}\r\n                            type=\"text\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                          />\r\n\r\n                          <InputGroup.Text id=\"basic-addon2\">\r\n                            Kgs\r\n                          </InputGroup.Text>\r\n                        </InputGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  ))}\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProcessingOutput;\r\n","import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport NavbarHeader from '../../Components/Navbar'\r\nimport InventorySideMenu from '../../containers/inventory/InventorySideMenu';\r\nimport ProcessingInput from '../../containers/inventory/ProcessingInput';\r\nimport ProcessingOutput from '../../containers/inventory/ProcessingOutput';\r\n\r\nfunction ProcessingPage() {\r\n    return (\r\n      <div>\r\n        <NavbarHeader />\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <ProcessingInput/>\r\n            </Col>\r\n            <Col>\r\n              <ProcessingOutput/>\r\n            </Col>\r\n            <Col md={2} lg={2} sm={2}>\r\n              <InventorySideMenu />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ProcessingPage\r\n","import { collection, getDocs, query, where } from \"firebase/firestore\";\r\nimport React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Button, Card, Modal } from \"react-bootstrap\";\r\nimport { FirebaseContext } from \"../store/Context\";\r\nimport { SideBarContext, StockAlterContext } from \"../store/SideMenuContext\";\r\n\r\nfunction AlterModal() {\r\n  const { db } = useContext(FirebaseContext);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [masterList, setMasterList] = useState([]);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const {\r\n    showAlter,\r\n    setShowAlter,\r\n    alterGroup,\r\n    alterCategory,\r\n    alterItem,\r\n    alterUnit,\r\n    alterGodown,\r\n    setDocId,\r\n    setDltTitle,\r\n    setDltBody,\r\n    setAlterDate,\r\n  } = useContext(StockAlterContext);\r\n\r\n  const {\r\n    setLabelThree,\r\n    setCreateUnit,\r\n    setCreateGodown,\r\n    setCreateItem,\r\n    setShowCreate,\r\n    setTitles,\r\n    setLabelOne,\r\n    setLabelTwo,\r\n    setPlaceHolder,\r\n    setIsAlter,\r\n    setUnderSelection,\r\n    setPhUnit,\r\n    setPhQty,\r\n    setPhRate,\r\n    setPhValue,\r\n    setPlaceHolder2,\r\n    setPhLot,\r\n    setPhMfgDt,\r\n    setphExpDt,\r\n    setPhGodown,\r\n    setPhBatch,\r\n  } = useContext(SideBarContext);\r\n  const handleCloseAlter = () => {\r\n    setShowAlter(false);\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getCollection = async () => {\r\n      if (alterGroup === true) {\r\n        setTitle(\"List of Stock Group\");\r\n        const collectionData = await getDocs(collection(db, \"StockGroup\"));\r\n        setMasterList(\r\n          collectionData.docs.map((doc) => ({\r\n            ...doc.data(),\r\n          }))\r\n        );\r\n      } else if (alterCategory === true) {\r\n        setTitle(\"List of Category Group\");\r\n        const collectionData = await getDocs(collection(db, \"StockCategory\"));\r\n        setMasterList(\r\n          collectionData.docs.map((doc) => ({\r\n            ...doc.data(),\r\n          }))\r\n        );\r\n      } else if (alterItem === true) {\r\n        setTitle(\"List of Stock Items\");\r\n        const collectionData = await getDocs(collection(db, \"Stock Items\"));\r\n        setMasterList(\r\n          collectionData.docs.map((doc) => ({\r\n            ...doc.data(),\r\n          }))\r\n        );\r\n      } else if (alterUnit === true) {\r\n        setTitle(\"List of Units\");\r\n        const collectionData = await getDocs(collection(db, \"Units\"));\r\n        setMasterList(\r\n          collectionData.docs.map((doc) => ({\r\n            ...doc.data(),\r\n          }))\r\n        );\r\n      } else if (alterGodown === true) {\r\n        setTitle(\"List of Godowns\");\r\n        const collectionData = await getDocs(collection(db, \"Godown\"));\r\n        setMasterList(\r\n          collectionData.docs.map((doc) => ({\r\n            ...doc.data(),\r\n          }))\r\n        );\r\n      }\r\n    };\r\n    getCollection();\r\n  }, [db, alterGroup, alterCategory, alterItem, alterUnit, alterGodown]);\r\n\r\n  const onSelection = async (e) => {\r\n    setValue(e.target.dataset.value);\r\n    // console.log(\"aasdf\", e.target.dataset.value);\r\n    if (alterGroup === true) {\r\n      const q = query(\r\n        collection(db, \"StockGroup\"),\r\n        where(\"groupName\", \"==\", value)\r\n      );\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        const groupName = doc.data().groupName;\r\n        const under = doc.data().under;\r\n        const docId = doc.id;\r\n\r\n        console.log(doc.id, \" => \", doc.data());\r\n        setShowCreate(true);\r\n        setTitles(\"Stock Group Alter\");\r\n        setLabelOne(\"Group Name\");\r\n        setLabelTwo(\"Under\");\r\n        setUnderSelection(under);\r\n        setPlaceHolder(groupName);\r\n        setIsAlter(true);\r\n        setDocId(docId);\r\n        setDltTitle(\"Delete Stock Group\");\r\n        setDltBody(`Are you sure you want to delete ${groupName}  ?`);\r\n      });\r\n    } else if (alterCategory === true) {\r\n      const q = query(\r\n        collection(db, \"StockCategory\"),\r\n        where(\"categoryName\", \"==\", value)\r\n      );\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        const categoryName = doc.data().categoryName;\r\n        const under = doc.data().categoryUnder;\r\n        const docId = doc.id;\r\n        console.log(doc.id, \" => \", doc.data());\r\n        setShowCreate(true);\r\n        setTitles(\"Stock Category Alter\");\r\n        setLabelOne(\"Category Name\");\r\n        setLabelTwo(\"Under\");\r\n        setPlaceHolder(categoryName);\r\n        setUnderSelection(under);\r\n        setIsAlter(true);\r\n        setDocId(docId);\r\n        setDltTitle(\"Delete Stock Category\");\r\n        setDltBody(`Are you sure you want to delete ${categoryName}  ?`);\r\n      });\r\n    } else if (alterItem === true) {\r\n      const q = query(\r\n        collection(db, \"Stock Items\"),\r\n        where(\"itemName\", \"==\", value)\r\n      );\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        const itemName = doc.data().itemName;\r\n        const under = doc.data().under;\r\n        const unit = doc.data().unit;\r\n        const quantity = doc.data().quantity;\r\n        const rate = doc.data().rate;\r\n        const value = doc.data().value;\r\n        const lot = doc.data().lot;\r\n        const godown = doc.data().godown;\r\n        const batch = doc.data().batch;\r\n        const mfgDt = doc.data().mfgDt;\r\n        const expDt = doc.data().expDt;\r\n        const docId = doc.id;\r\n\r\n        console.log(doc.id, \" => \", doc.data());\r\n        setShowCreate(true);\r\n        setCreateItem(true);\r\n        setPhGodown(godown);\r\n        setPhBatch(batch);\r\n        setPhMfgDt(mfgDt);\r\n        setphExpDt(expDt);\r\n        setTitles(\"Stock Item Alter\");\r\n        setLabelOne(\"Item Name\");\r\n        setLabelTwo(\"Under\");\r\n        setLabelThree(\"Units\");\r\n        setPlaceHolder(itemName);\r\n        setUnderSelection(under);\r\n        setPhUnit(unit);\r\n        setPhQty(quantity);\r\n        setPhRate(rate);\r\n        setPhValue(value);\r\n        setIsAlter(true);\r\n        setPhLot(lot);\r\n        setAlterDate(true);\r\n        setDocId(docId);\r\n        setDltTitle(\"Delete Stock Item\");\r\n        setDltBody(`Are you sure you want to delete ${itemName}  ?`);\r\n      });\r\n    } else if (alterUnit === true) {\r\n      const q = query(collection(db, \"Units\"), where(\"symbol\", \"==\", value));\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        const symbol = doc.data().symbol;\r\n        const formalName = doc.data().formalName;\r\n        const uqc = doc.data().uqc;\r\n        const docId = doc.id;\r\n\r\n        console.log(doc.id, \" => \", doc.data());\r\n\r\n        setShowCreate(true);\r\n        setCreateUnit(true);\r\n        setTitles(\"Unit Alter\");\r\n        setLabelOne(\"Symbol\");\r\n        setLabelTwo(\"Formal Name\");\r\n        setLabelThree(\"Unit Quantity Code (UQC)\");\r\n        setPlaceHolder(formalName);\r\n        setPlaceHolder2(symbol);\r\n        setUnderSelection(uqc);\r\n        // setUnderSelection(under);\r\n        setIsAlter(true);\r\n        setDocId(docId);\r\n        setDltTitle(\"Delete Unit\");\r\n        setDltBody(\r\n          `Are you sure you want to delete ${symbol}-${formalName}  ?`\r\n        );\r\n      });\r\n    } else if (alterGodown === true) {\r\n      const q = query(\r\n        collection(db, \"Godown\"),\r\n        where(\"godownName\", \"==\", value)\r\n      );\r\n      const querySnapshot = await getDocs(q);\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        const godownName = doc.data().godownName;\r\n        const under = doc.data().under;\r\n        const docId = doc.id;\r\n\r\n        console.log(doc.id, \" => \", doc.data());\r\n\r\n        setShowCreate(true);\r\n        setCreateGodown(true);\r\n        setTitles(\"Godown Alter\");\r\n        setLabelOne(\"Godown Name\");\r\n        setLabelTwo(\"Under\");\r\n        setPlaceHolder(godownName);\r\n        setUnderSelection(under);\r\n        setDocId(docId);\r\n        setIsAlter(true);\r\n        setDltTitle(\"Delete Godown\");\r\n        setDltBody(`Are you sure you want to delete ${godownName}  ?`);\r\n      });\r\n    } else {\r\n      alert(\"erorrrrrrrrrrrrrrrrrrrrrrrrr\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"alterModal_parentDiv\">\r\n      <Modal\r\n        show={showAlter}\r\n        onHide={handleCloseAlter}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        //  style={{ width: \"max-content\", marginLeft: \"40%\" }}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title className=\"text-Title\">{title} </Modal.Title>\r\n        </Modal.Header>\r\n        {alterGroup ? (\r\n          <Modal.Body>\r\n            {masterList.map((obj, i) => (\r\n              <Card.Text\r\n                className=\"text-items\"\r\n                key={i}\r\n                data-value={obj.groupName}\r\n                onClick={(e) => {\r\n                  onSelection(e);\r\n                }}\r\n              >\r\n                {obj.groupName}\r\n              </Card.Text>\r\n            ))}\r\n          </Modal.Body>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {alterCategory ? (\r\n          <Modal.Body>\r\n            {masterList.map((obj, i) => (\r\n              <Card.Text\r\n                className=\"text-items\"\r\n                key={i}\r\n                data-value={obj.categoryName}\r\n                onClick={(e) => {\r\n                  onSelection(e);\r\n                }}\r\n              >\r\n                {obj.categoryName}\r\n              </Card.Text>\r\n            ))}\r\n          </Modal.Body>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {alterItem ? (\r\n          <Modal.Body>\r\n            {masterList.map((obj, i) => (\r\n              <Card.Text\r\n                className=\"text-items\"\r\n                key={i}\r\n                data-value={obj.itemName}\r\n                onClick={(e) => {\r\n                  onSelection(e);\r\n                }}\r\n              >\r\n                {obj.itemName}\r\n              </Card.Text>\r\n            ))}\r\n          </Modal.Body>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {alterUnit ? (\r\n          <Modal.Body>\r\n            {masterList.map((obj, i) => (\r\n              <Card.Text\r\n                className=\"text-items\"\r\n                key={i}\r\n                data-value={obj.symbol}\r\n                onClick={(e) => {\r\n                  onSelection(e);\r\n                }}\r\n              >\r\n                {obj.symbol}\r\n              </Card.Text>\r\n            ))}\r\n          </Modal.Body>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {alterGodown ? (\r\n          <Modal.Body>\r\n            {masterList.map((obj, i) => (\r\n              <Card.Text\r\n                className=\"text-items\"\r\n                key={i}\r\n                data-value={obj.godownName}\r\n                onClick={(e) => {\r\n                  onSelection(e);\r\n                }}\r\n              >\r\n                {obj.godownName}\r\n              </Card.Text>\r\n            ))}\r\n          </Modal.Body>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <Modal.Footer>\r\n          {/* <Button variant=\"success\" type=\"submit\" onClick={handleSubmit}>\r\n              Submit\r\n            </Button> */}\r\n          <Button variant=\"danger\" onClick={handleCloseAlter}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* ****************Alter Modal********************************* */}\r\n      {/* <Modal\r\n        className=\"alterModal\"\r\n        show={showAlterPage}\r\n        onHide={handleCloseAlterPage}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Alterjklbnn</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Title</th>\r\n                <th>Old Data</th>\r\n                <th>New Data</th>\r\n              </tr>\r\n            </thead>\r\n            {alterGroup ? (\r\n              <tbody>\r\n                <tr>\r\n                  <td>1</td>\r\n                  <td>{heading1}</td>\r\n                  <td>{data1}</td>\r\n                  <td>\r\n                    <FormControl placeholder={data1} />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>1</td>\r\n                  <td>{heading2} </td>\r\n                  <td>{data2} </td>\r\n                  <td>\r\n                    <FormControl placeholder={data2} />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {alterCategory ? (\r\n              <tbody>\r\n                <tr>\r\n                  <td>1</td>\r\n                  <td>{heading1}</td>\r\n                  <td>{data1}</td>\r\n                  <td>\r\n                    <FormControl placeholder={data1} />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>1</td>\r\n                  <td>{heading2} </td>\r\n                  <td>{data2} </td>\r\n                  <td>\r\n                    <FormControl placeholder={data2} />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Table>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"success\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleCloseAlterPage}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AlterModal;\r\n","import { deleteDoc, doc } from \"firebase/firestore\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { FirebaseContext } from \"../store/Context\";\r\nimport { SideBarContext, StockAlterContext } from \"../store/SideMenuContext\";\r\n\r\nfunction ConfirmDltModal() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const {\r\n    showDltModal,\r\n    setShowDltModal,\r\n    docId,\r\n    presentCollection,\r\n    setPresentCollection,\r\n    dltTitle,\r\n    dltBody,\r\n    setShowAlter,\r\n  } = useContext(StockAlterContext);\r\n  const { setShowCreate, setShowBatchModal } = useContext(SideBarContext);\r\n  const { db } = useContext(FirebaseContext);\r\n  const handleClose = () => {\r\n    setShowDltModal(false);\r\n    setShowCreate(false);\r\n    setShowAlter(false);\r\n    setShowBatchModal(false);\r\n    setPresentCollection(\"\");\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //     setTitle(\"Delete Stock Group\");\r\n  //     setBody(\"Are you sure you want to delete your account?\");\r\n\r\n  // }, [])\r\n\r\n  const handleDelete = async () => {\r\n    await deleteDoc(doc(db, presentCollection, docId))\r\n      .catch((e) => {\r\n        console.log(e);\r\n        alert(\"Delete Error :\", e);\r\n      })\r\n      .then(() => {\r\n        alert(\"Deleted\");\r\n        handleClose();\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={showDltModal}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header\r\n        // closeButton\r\n        >\r\n          <Modal.Title className=\"batchTitle\">{dltTitle}</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>{dltBody}</Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"success\" type=\"submit\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"danger\"\r\n            onClick={() => {\r\n              handleDelete();\r\n            }}\r\n          >\r\n            Confirm Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConfirmDltModal;\r\n","// ********New**********\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Button,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  InputGroup,\r\n  FormControl,\r\n  Table,\r\n  FormSelect,\r\n} from \"react-bootstrap\";\r\nimport { SideBarContext, StockAlterContext } from \"../store/SideMenuContext\";\r\nimport { AuthContext, FirebaseContext } from \"../store/Context\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  doc,\r\n  setDoc,\r\n  updateDoc,\r\n  serverTimestamp,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport \"./Components.css\";\r\n\r\nfunction CreateModal() {\r\n  const { db } = useContext(FirebaseContext);\r\n  const [gName, setGName] = useState(\"\");\r\n  const [gName2, setGName2] = useState(\"\");\r\n  const [under, setUnder] = useState(\"\");\r\n  const [unit, setUnit] = useState(\"\");\r\n  const [uqcName, setUqcName] = useState(\"\");\r\n  const [quantity, setQuantity] = useState();\r\n  const [rate, setRate] = useState();\r\n  const [value, setValue] = useState();\r\n  const [lot, setLot] = useState(\"\");\r\n\r\n  const [godown, setGodown] = useState(\"\");\r\n  const [batch, setBatch] = useState(\"\");\r\n  const [mfgDt, setMfgDt] = useState(\"\");\r\n  const [expDt, setExpDt] = useState(\"\");\r\n  const [collectionName, setCollectionName] = useState(\"\");\r\n\r\n  const {\r\n    showCreate,\r\n    setShowCreate,\r\n    createGroup,\r\n    createCategory,\r\n    setCreateCategory,\r\n    setCreateGroup,\r\n    createUnit,\r\n    setCreateUnit,\r\n    createGodown,\r\n    createItem,\r\n    setCreateItem,\r\n    titles,\r\n    labelOne,\r\n    labelTwo,\r\n    labelThree,\r\n    placeHolder,\r\n    placeHolder2,\r\n    isAlter,\r\n    underSelection,\r\n    setUnderSelection,\r\n    phUnit,\r\n    setPhUnit,\r\n    phQty,\r\n    phRate,\r\n    setPhRate,\r\n    phValue,\r\n    setPhValue,\r\n    phLot,\r\n    setPhLot,\r\n    showBatchModal,\r\n    setShowBatchModal,\r\n    phMfgDt,\r\n    phExpDt,\r\n    phGodown,\r\n    phBatch,\r\n  } = useContext(SideBarContext);\r\n\r\n  const {\r\n    alterGroup,\r\n    alterCategory,\r\n    alterItem,\r\n    alterUnit,\r\n    alterGodown,\r\n    setShowDltModal,\r\n    setPresentCollection,\r\n    alterDate,\r\n    setAlterDate,\r\n    docId,\r\n  } = useContext(StockAlterContext);\r\n\r\n  const handleClose = () => {\r\n    setPhValue(null);\r\n    setPhRate(null);\r\n    setPhUnit(null);\r\n    setPhLot(null);\r\n    setUnderSelection(null);\r\n    setGName(null);\r\n    setUnder(null);\r\n    setUnit(null);\r\n\r\n    setShowCreate(false);\r\n    setCreateCategory(false);\r\n    setCreateGroup(false);\r\n    setCreateUnit(false);\r\n    setCreateItem(false);\r\n    window.location.reload();\r\n  };\r\n  const handleCloseUQC = () => {\r\n    setNewUQC(false);\r\n  };\r\n\r\n  const handleCloseBatchModal = () => {\r\n    setShowBatchModal(false);\r\n  };\r\n\r\n  // const handleShow = () => setShowCreate(true);\r\n\r\n  // const [groupDetails, setGroupDetails] = useState([]);\r\n  const [categoryDetails, setCategoryDetails] = useState([]);\r\n  const [groupDetails, setGroupDetails] = useState([]);\r\n  const [godownDetails, setGodownDetails] = useState([]);\r\n  const [uqcDetails, setUqcDetails] = useState([]);\r\n  const [unitDetails, setUnitDetails] = useState([]);\r\n  // **************** Get From Firebase ***************************\r\n  const { userDetails } = useContext(AuthContext);\r\n  const [alterValidated, setAlterValidated] = useState(false);\r\n  // useEffect(() => {\r\n  //   const updateDate = () => {\r\n  //     if (isAlter === true) {\r\n  //       setAlterDate(true);\r\n  //     }\r\n  //   }\r\n  //  updateDate()\r\n  // }, [])\r\n\r\n  useEffect(() => {\r\n    const getUqc = async () => {\r\n      const uqcData = await getDocs(collection(db, \"UQC\"));\r\n      setUqcDetails(\r\n        uqcData.docs.map((doc) => ({\r\n          ...doc.data(),\r\n        }))\r\n      );\r\n    };\r\n\r\n    const getUnits = async () => {\r\n      const unitData = await getDocs(collection(db, \"Units\"));\r\n      setUnitDetails(\r\n        unitData.docs.map((doc) => ({\r\n          ...doc.data(),\r\n        }))\r\n      );\r\n    };\r\n\r\n    const getCategory = async () => {\r\n      const categoryData = await getDocs(collection(db, \"StockCategory\"));\r\n      setCategoryDetails(\r\n        categoryData.docs.map((doc) => ({\r\n          ...doc.data(),\r\n        }))\r\n      );\r\n    };\r\n\r\n    const getGroup = async () => {\r\n      const categoryData = await getDocs(collection(db, \"StockGroup\"));\r\n      setGroupDetails(\r\n        categoryData.docs.map((doc) => ({\r\n          ...doc.data(),\r\n        }))\r\n      );\r\n    };\r\n\r\n    const getGodown = async () => {\r\n      const GodownData = await getDocs(collection(db, \"Godown\"));\r\n      setGodownDetails(\r\n        GodownData.docs.map((doc) => ({\r\n          ...doc.data(),\r\n        }))\r\n      );\r\n    };\r\n    getUqc();\r\n    getUnits();\r\n    getCategory();\r\n    getGroup();\r\n    getGodown();\r\n  }, [db]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setAlterValidated(true);\r\n    console.log(\"valid\", form.checkValidity());\r\n\r\n    if (form.checkValidity() === true) {\r\n      if (createGroup === true) {\r\n        const StockGroupRef = collection(db, \"StockGroup\");\r\n        setDoc(doc(StockGroupRef), {\r\n          //,general\r\n          groupName: gName,\r\n          under: under,\r\n        }).then(() => {\r\n          handleClose();\r\n          // alert(\"Group submitted sucsessfull\");\r\n        });\r\n      } else if (createCategory === true) {\r\n        const StockCollectionRef = collection(db, \"StockCategory\");\r\n        setDoc(doc(StockCollectionRef), {\r\n          //,general\r\n          categoryName: gName,\r\n          categoryUnder: under,\r\n        }).then(() => {\r\n          handleClose();\r\n          alert(\"Category submitted sucsessfull\");\r\n        });\r\n      } else if (createUnit === true) {\r\n        const StockUnitRef = collection(db, \"Units\");\r\n        setDoc(doc(StockUnitRef), {\r\n          //,general\r\n          symbol: gName,\r\n          formalName: gName2,\r\n          uqc: unit,\r\n        }).then(() => {\r\n          handleClose();\r\n          alert(\"Unit Created sucsessfull\");\r\n        });\r\n      } else if (createGodown === true) {\r\n        const StockGodownRef = await collection(db, \"Godown\");\r\n\r\n        setDoc(doc(StockGodownRef), {\r\n          //,general\r\n          factory: userDetails.company,\r\n          godownName: gName,\r\n          under: under,\r\n        })\r\n          .catch((e) => {\r\n            console.log(e);\r\n            alert(\"error\", e);\r\n          })\r\n          .then(() => {\r\n            handleClose();\r\n            alert(\"Godown Created successfull\");\r\n          });\r\n      } else if (createItem === true) {\r\n        setShowBatchModal(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setAlterValidated(true);\r\n    console.log(form.checkValidity());\r\n\r\n    if (form.checkValidity() === true) {\r\n      if (isAlter === true) {\r\n        if (alterGroup === true) {\r\n          const alterGroupRef = doc(db, \"StockGroup\", docId);\r\n          updateDoc(alterGroupRef, {\r\n            updatedOn: serverTimestamp(),\r\n            groupName: gName,\r\n            under: under,\r\n          })\r\n            .catch((e) => {\r\n              console.log(e);\r\n              alert(\"error\", e);\r\n            })\r\n            .then(() => {\r\n              handleClose();\r\n              alert(\"Stock Group Updated successfull\");\r\n            });\r\n        } else if (alterCategory === true) {\r\n          const alterCategoryRef = doc(db, \"StockCategory\", docId);\r\n          updateDoc(alterCategoryRef, {\r\n            updatedOn: serverTimestamp(),\r\n            categoryName: gName,\r\n            categoryUnder: under,\r\n          })\r\n            .catch((e) => {\r\n              console.log(e);\r\n              alert(\"error\", e);\r\n            })\r\n            .then(() => {\r\n              handleClose();\r\n              alert(\"Stock Category Updated successfull\");\r\n            });\r\n        } else if (alterUnit === true) {\r\n          const alterUnitRef = doc(db, \"Units\", docId);\r\n          updateDoc(alterUnitRef, {\r\n            updatedOn: serverTimestamp(),\r\n            symbol: gName,\r\n            formalName: gName2,\r\n            uqc: unit,\r\n          })\r\n            .catch((e) => {\r\n              console.log(e);\r\n              alert(\"error\", e);\r\n            })\r\n            .then(() => {\r\n              handleClose();\r\n              alert(\"Unit Updated successfull\");\r\n            });\r\n        } else if (alterGodown === true) {\r\n          const alterGodownRef = doc(db, \"Godown\", docId);\r\n          updateDoc(alterGodownRef, {\r\n            updatedOn: serverTimestamp(),\r\n            factory: userDetails.company,\r\n            godownName: gName,\r\n            under: under,\r\n          })\r\n            .catch((e) => {\r\n              console.log(e);\r\n              alert(\"error\", e);\r\n            })\r\n            .then(() => {\r\n              handleClose();\r\n              alert(\"Godown Updated successfull\");\r\n            });\r\n        } else if (alterItem === true) {\r\n          setShowBatchModal(true);\r\n        }\r\n      }\r\n    } else {\r\n      alert(\"please check curruption\");\r\n    }\r\n  };\r\n  const handleUpdateItem = async () => {\r\n    const alterItemRef = doc(db, \"Stock Items\", docId);\r\n\r\n    await updateDoc(alterItemRef, {\r\n      updatedOn: serverTimestamp(),\r\n      arrivedFrom: \"Opening Balance\",\r\n      factory: userDetails.company,\r\n      itemName: gName,\r\n      under: under,\r\n      unit: unit,\r\n      quantity: parseInt(quantity),\r\n      rate,\r\n      value,\r\n      godown,\r\n      batch,\r\n      mfgDt,\r\n      expDt,\r\n      lot: parseInt(lot),\r\n    })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        alert(\"Error :\", e);\r\n      })\r\n      .then(() => {\r\n        handleClose();\r\n        alert(\"Item Updated Successfull\");\r\n      });\r\n  };\r\n\r\n  const handleSubmitItem = async () => {\r\n    const StockItemRef = await collection(db, \"Stock Items\");\r\n\r\n    // const q = await query(\r\n    //   collection(db, \"StockGroup\"),\r\n    //   where(\"groupName\", \"==\", under)\r\n    // );\r\n    // const querySnapshot = await getDocs(q);\r\n    // querySnapshot.forEach((doc) => {\r\n    //   setCategoryP(doc.data().under);\r\n    //   // doc.data() is never undefined for query doc snapshots\r\n    //   console.log(\"abcd\",doc.id, \" => \", doc.data());\r\n    // });\r\n\r\n    setDoc(\r\n      doc(StockItemRef),\r\n      await {\r\n        arrivedFrom: \"Opening Balance\",\r\n        factory: userDetails.company,\r\n        itemName: gName,\r\n        under: under,\r\n        unit: unit,\r\n        quantity: parseInt(quantity),\r\n        rate,\r\n        value,\r\n        godown,\r\n        batch,\r\n        mfgDt,\r\n        expDt,\r\n        lot,\r\n      }\r\n    )\r\n      .catch((e) => {\r\n        console.log(e);\r\n        alert(\"Error :\", e);\r\n      })\r\n      .then(() => {\r\n        handleClose();\r\n        alert(\"Item Added Successfull\");\r\n      });\r\n  };\r\n\r\n  const [newUQC, setNewUQC] = useState(false);\r\n  const handleCreateUQC = (e) => {\r\n    e.preventDefault();\r\n    setNewUQC(true);\r\n  };\r\n\r\n  const handleSubmitUqc = (e) => {\r\n    const newUqcRef = collection(db, \"UQC\");\r\n    setDoc(doc(newUqcRef), {\r\n      //,general\r\n      uqcName: uqcName,\r\n    }).then(() => {\r\n      handleCloseUQC();\r\n      alert(\"UQC Added sucsessfull\");\r\n    });\r\n  };\r\n\r\n  const handleDelete = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (alterGroup === true) {\r\n      setPresentCollection(\"StockGroup\");\r\n      setShowDltModal(true);\r\n    } else if (alterCategory === true) {\r\n      setPresentCollection(\"StockCategory\");\r\n      setShowDltModal(true);\r\n    } else if (alterItem === true) {\r\n      setPresentCollection(\"Stock Items\");\r\n      setShowDltModal(true);\r\n    } else if (alterUnit === true) {\r\n      setPresentCollection(\"Units\");\r\n      setShowDltModal(true);\r\n    } else if (alterGodown === true) {\r\n      setPresentCollection(\"Godown\");\r\n      setShowDltModal(true);\r\n    }\r\n  };\r\n\r\n  const findValue = (rate) => {\r\n    const totalValue = rate * quantity;\r\n    setValue(totalValue);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button variant=\"primary\" onClick={handleShow}>\r\n          Launch static backdrop modal\r\n        </Button> */}\r\n      {/* {createGroup == true ? ( */}\r\n      <Modal\r\n        show={showCreate}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        // style={{ width: \"max-content\", marginLeft: \"40%\" }}\r\n      >\r\n        <Form\r\n          noValidate\r\n          validated={alterValidated}\r\n          onSubmit={isAlter === true ? handleUpdate : handleSubmit}\r\n        >\r\n          <Modal.Header\r\n          // closeButton\r\n          >\r\n            <Modal.Title>{titles}</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            {/* <Form noValidate validated={alterValidated} onSubmit={handleSubmit}> */}\r\n            {/* **************************gName Input***************************** */}\r\n            <Form.Group\r\n              as={Row}\r\n              className=\"mb-3\"\r\n              controlId=\"formPlaintextEmail\"\r\n            >\r\n              <Form.Label placeholder=\"Type Group Name ...\" column sm=\"4\">\r\n                {labelOne}\r\n              </Form.Label>\r\n              <Col sm=\"8\">\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  plaintext\r\n                  placeholder={placeHolder2 ? placeHolder2 : placeHolder}\r\n                  // value={gName}\r\n                  onChange={(e) => {\r\n                    setGName(e.target.value.toUpperCase());\r\n                  }}\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Please Enter a Value in Input Field\r\n                </Form.Control.Feedback>\r\n              </Col>\r\n            </Form.Group>\r\n            {/* **************************gName2 Input unit***************************** */}\r\n            {createUnit === true ? (\r\n              <Form.Group\r\n                as={Row}\r\n                className=\"mb-3\"\r\n                controlId=\"formPlaintextEmail\"\r\n              >\r\n                <Form.Label column sm=\"4\">\r\n                  {labelTwo}\r\n                </Form.Label>\r\n                <Col sm=\"8\">\r\n                  <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    plaintext\r\n                    placeholder={placeHolder}\r\n                    value={gName2}\r\n                    onChange={(e) => {\r\n                      setGName2(e.target.value.toUpperCase());\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n            ) : (\r\n              // * ************************** under options***************************** *\r\n              <Form.Group\r\n                as={Row}\r\n                className=\"mb-3\"\r\n                controlId=\"formPlaintextEmail\"\r\n              >\r\n                <Form.Label column sm=\"4\">\r\n                  {labelTwo}\r\n                </Form.Label>\r\n                <Col sm=\"8\">\r\n                  {createGodown === true ? (\r\n                    <Form.Select\r\n                      aria-label=\"Default select example\"\r\n                      value={under}\r\n                      onChange={(e) => {\r\n                        setUnder(e.target.value);\r\n                      }}\r\n                    >\r\n                      <option\r\n                        value={underSelection ? underSelection : \"Primary\"}\r\n                      >\r\n                        {underSelection ? underSelection : \"Primary\"}\r\n                      </option>\r\n                      {godownDetails.map((obj) => (\r\n                        <option>{obj.godownName}</option>\r\n                      ))}\r\n                    </Form.Select>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {createItem === true ? (\r\n                    <Form.Select\r\n                      required\r\n                      placeholder=\"Abvuig\"\r\n                      aria-label=\"Default select example\"\r\n                      value={under}\r\n                      onChange={(e) => {\r\n                        setUnder(e.target.value);\r\n                      }}\r\n                    >\r\n                      <option\r\n                        value={underSelection ? underSelection : \"Primary\"}\r\n                      >\r\n                        {underSelection ? underSelection : \"Primary\"}\r\n                      </option>\r\n\r\n                      {groupDetails.map((obj) => (\r\n                        <option value={obj.groupName}>{obj.groupName}</option>\r\n                      ))}\r\n                      <option value=\"none\"> None</option>\r\n                    </Form.Select>\r\n                  ) : (\r\n                    <Form.Select\r\n                      required\r\n                      placeholder=\"Abvuig\"\r\n                      aria-label=\"Default select example\"\r\n                      value={under}\r\n                      onChange={(e) => {\r\n                        setUnder(e.target.value);\r\n                      }}\r\n                    >\r\n                      <option\r\n                        value={underSelection ? underSelection : \"Primary\"}\r\n                      >\r\n                        {underSelection ? underSelection : \"Primary\"}\r\n                      </option>\r\n\r\n                      {categoryDetails.map((obj) => (\r\n                        <option value={obj.categoryName}>\r\n                          {obj.categoryName}\r\n                        </option>\r\n                      ))}\r\n                      <option value=\"none\"> None</option>\r\n                    </Form.Select>\r\n                  )}\r\n                </Col>\r\n              </Form.Group>\r\n            )}\r\n            {createUnit === true ? (\r\n              <Form.Group\r\n                as={Row}\r\n                className=\"mb-3\"\r\n                controlId=\"formPlaintextEmail\"\r\n              >\r\n                <Form.Label column sm=\"4\">\r\n                  {labelThree}\r\n                </Form.Label>\r\n                <Col sm=\"8\">\r\n                  <Form.Select\r\n                    aria-label=\"Default select example\"\r\n                    onChange={(e) => {\r\n                      setUnit(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option value=\"Not Applicable\">\r\n                      {underSelection ? underSelection : \"Not Applicable\"}\r\n                    </option>\r\n                    <option value=\"BAG-BAGS\">BAG-BAGS</option>\r\n                    <option value=\"BOX-BOX\">BOX-BOX</option>\r\n                    <option value=\"BTL-BOTTLES\">BTL-BOTTLES</option>\r\n                    <option value=\"KGS-KILOGRAMS\">KGS-KILOGRAMS</option>\r\n                    {uqcDetails.map((obj) => (\r\n                      <option>{obj.uqcName} </option>\r\n                    ))}\r\n                    <hr />\r\n                  </Form.Select>\r\n                  <Form.Text className=\"formText\" onClick={handleCreateUQC}>\r\n                    *New UQC\r\n                  </Form.Text>\r\n                </Col>\r\n              </Form.Group>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {createItem === true ? (\r\n              <Form.Group\r\n                as={Row}\r\n                className=\"mb-3\"\r\n                controlId=\"formPlaintextEmail\"\r\n              >\r\n                <Form.Label column sm=\"4\">\r\n                  {labelThree}\r\n                </Form.Label>\r\n                <Col sm=\"8\">\r\n                  <Form.Select\r\n                    aria-label=\"Default select example\"\r\n                    value={unit}\r\n                    onChange={(e) => {\r\n                      setUnit(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option>{phUnit ? phUnit : \"Not Applicable\"}</option>\r\n                    {unitDetails.map((obj) => (\r\n                      <option>{`${obj.symbol}`} </option>\r\n                    ))}\r\n                  </Form.Select>\r\n                </Col>\r\n              </Form.Group>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {/* </Form> */}\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <hr />\r\n            {createItem === true ? (\r\n              <Form noValidate validated={alterValidated}>\r\n                <Row>\r\n                  <Modal.Title>Opening Balance</Modal.Title>\r\n                  <Form.Group\r\n                    as={Row}\r\n                    className=\"mb-3\"\r\n                    controlId=\"formPlaintextEmail\"\r\n                  >\r\n                    <Form.Group\r\n                      as={Row}\r\n                      className=\"mb-3\"\r\n                      controlId=\"formPlaintextEmail\"\r\n                    >\r\n                      <Form.Label column sm=\"4\">\r\n                        Lot No.\r\n                      </Form.Label>\r\n                      <Col sm=\"8\">\r\n                        <Form.Control\r\n                          required\r\n                          placeholder={phLot ? phLot : lot}\r\n                          value={lot}\r\n                          onChange={(e) => {\r\n                            setLot(e.target.value);\r\n                          }}\r\n                          type=\"text\"\r\n                        />\r\n                      </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Label column sm=\"4\">\r\n                      Quantity\r\n                    </Form.Label>\r\n                    <Col sm=\"8\">\r\n                      <InputGroup className=\"mb-3\">\r\n                        <FormControl\r\n                          type=\"text\"\r\n                          placeholder={phQty}\r\n                          aria-describedby=\"basic-addon2\"\r\n                          value={quantity}\r\n                          onChange={(e) => {\r\n                            setPhValue(\"\");\r\n                            setQuantity(e.target.value);\r\n                          }}\r\n                        />\r\n                        <InputGroup.Text id=\"basic-addon2\">\r\n                          {unit ? unit : phUnit}\r\n                        </InputGroup.Text>\r\n                      </InputGroup>\r\n                    </Col>\r\n                  </Form.Group>\r\n                  <Form.Group\r\n                    as={Row}\r\n                    className=\"mb-3\"\r\n                    controlId=\"formPlaintextEmail\"\r\n                  >\r\n                    <Form.Label column sm=\"4\">\r\n                      Rate\r\n                    </Form.Label>\r\n                    <Col sm=\"8\">\r\n                      <InputGroup className=\"mb-3\">\r\n                        <FormControl\r\n                          type=\"text\"\r\n                          placeholder={phRate ? phRate : \"Type Rate......\"}\r\n                          aria-describedby=\"basic-addon2\"\r\n                          value={rate}\r\n                          onChange={(e) => {\r\n                            setPhValue(\"\");\r\n                            setRate(e.target.value);\r\n                            findValue(e.target.value);\r\n                          }}\r\n                        />\r\n                        <InputGroup.Text id=\"basic-addon2\">\r\n                          {`per ${unit ? unit : phUnit}`}\r\n                        </InputGroup.Text>\r\n                      </InputGroup>\r\n                    </Col>\r\n                  </Form.Group>\r\n                </Row>\r\n\r\n                <Form.Group\r\n                  as={Row}\r\n                  className=\"mb-3\"\r\n                  controlId=\"formPlaintextEmail\"\r\n                >\r\n                  <Form.Label column sm=\"4\">\r\n                    Value\r\n                  </Form.Label>\r\n                  <Col sm=\"8\">\r\n                    <Form.Control\r\n                      required\r\n                      disabled\r\n                      placeholder={phValue ? phValue : value}\r\n                      value={value}\r\n                      type=\"text\"\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <hr />\r\n          </Modal.Footer>\r\n          <Modal.Footer>\r\n            {isAlter ? (\r\n              <div>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Update\r\n                </Button>\r\n\r\n                <Button variant=\"danger\" onClick={handleDelete}>\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <Button variant=\"success\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            )}\r\n            <Button variant=\"info\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n      {/* ********************New UQC Creation Modal ************************* */}\r\n      <Modal\r\n        className=\"modalUQC\"\r\n        show={newUQC}\r\n        onHide={handleCloseUQC}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        // style={{ width: \"max-content\", marginLeft: \"40%\" }}\r\n      >\r\n        <Modal.Header\r\n        // closeButton\r\n        >\r\n          <Modal.Title>UQC Creation</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Form noValidate validated={alterValidated} onSubmit={handleSubmit}>\r\n            <Form.Group\r\n              as={Row}\r\n              className=\"mb-3\"\r\n              controlId=\"formPlaintextEmail\"\r\n            >\r\n              <Form.Label column sm=\"4\">\r\n                UQC\r\n              </Form.Label>\r\n              <Col sm=\"8\">\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  plaintext\r\n                  placeholder=\"Type Group Name\"\r\n                  value={uqcName}\r\n                  onChange={(e) => {\r\n                    setUqcName(e.target.value);\r\n                  }}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"success\" type=\"submit\" onClick={handleSubmitUqc}>\r\n            Submit\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleCloseUQC}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      {/* ******************** //New UQC Creation Modal ************************* */}\r\n\r\n      {/* ********************Batch Creation Modal ************************* */}\r\n      <Modal\r\n        className=\"batchModal\"\r\n        show={showBatchModal}\r\n        onHide={handleCloseBatchModal}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        // style={{ width: \"max-content\", marginLeft: \"40%\" }}\r\n      >\r\n        <Modal.Header\r\n        // closeButton\r\n        >\r\n          <Modal.Title className=\"batchTitle\">\r\n            <h5 className=\"batchHeading\">{`Allocates of ${\r\n              gName ? gName : placeHolder\r\n            }`}</h5>\r\n            <h5 className=\"batchHeading\">{`for : ${\r\n              quantity ? quantity : phQty\r\n            } ${unit ? unit : phUnit}`}</h5>\r\n            <h5 className=\"batchHeading\">{`Lot No. : ${lot ? lot : phLot}`}</h5>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Godown</th>\r\n                <th>Batch</th>\r\n                <th>Mfg Dt</th>\r\n                <th>Exp Dt</th>\r\n                <th>Rate</th>\r\n                <th>Qty</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <FormSelect\r\n                    value={godown}\r\n                    onChange={(e) => {\r\n                      setGodown(e.target.value);\r\n                    }}\r\n                  >\r\n                    <option>{phGodown ? phGodown : \"Main Location\"}</option>\r\n                    {godownDetails.map((obj) => (\r\n                      <option>{obj.godownName}</option>\r\n                    ))}\r\n                  </FormSelect>\r\n                </td>\r\n                <td>\r\n                  <FormControl\r\n                    required\r\n                    placeholder={phBatch ? phBatch : batch}\r\n                    value={batch}\r\n                    onChange={(e) => {\r\n                      setBatch(e.target.value);\r\n                    }}\r\n                  />\r\n                </td>\r\n                {alterDate ? (\r\n                  <td>\r\n                    <FormControl\r\n                      required\r\n                      type=\"text\"\r\n                      placeHolder={phMfgDt}\r\n                      onChange={() => {\r\n                        setAlterDate(false);\r\n                      }}\r\n                    />\r\n                  </td>\r\n                ) : (\r\n                  <td>\r\n                    <FormControl\r\n                      required\r\n                      value={mfgDt}\r\n                      onChange={(e) => {\r\n                        setMfgDt(e.target.value);\r\n                      }}\r\n                      type=\"date\"\r\n                    />\r\n                  </td>\r\n                )}\r\n\r\n                {alterDate ? (\r\n                  <td>\r\n                    <FormControl\r\n                      required\r\n                      placeHolder={phExpDt}\r\n                      type=\"text\"\r\n                      onChange={() => {\r\n                        setAlterDate(false);\r\n                      }}\r\n                    />\r\n                  </td>\r\n                ) : (\r\n                  <td>\r\n                    <FormControl\r\n                      required\r\n                      type=\"date\"\r\n                      placeHolder={phExpDt}\r\n                      name=\"DOB\"\r\n                      onChange={(e) => {\r\n                        setExpDt(e.target.value);\r\n                      }}\r\n                    />\r\n                  </td>\r\n                )}\r\n                <td>\r\n                  <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                      required\r\n                      type=\"decimal\"\r\n                      aria-describedby=\"basic-addon2\"\r\n                      placeholder={rate ? rate : phRate}\r\n                      onChange={(e) => {\r\n                        setRate(e.target.value);\r\n                      }}\r\n                    />\r\n                    <InputGroup.Text id=\"basic-addon2\">\r\n                      {unit ? unit : phUnit}\r\n                    </InputGroup.Text>\r\n                  </InputGroup>\r\n                </td>\r\n                <td>\r\n                  <FormControl\r\n                    required\r\n                    placeHolder={quantity ? quantity : phQty}\r\n                    type=\"number\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <FormControl disabled placeHolder={value ? value : phValue} />\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td colSpan={5}>Total Qty :</td>\r\n                <td>\r\n                  <FormControl disabled value={quantity ? quantity : phQty} />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </Modal.Body>\r\n\r\n        {isAlter ? (\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={handleUpdateItem}>\r\n              Update\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={handleDelete}>\r\n              Delete\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={handleCloseBatchModal}>\r\n              Cancel\r\n            </Button>\r\n          </Modal.Footer>\r\n        ) : (\r\n          <Modal.Footer>\r\n            <Button variant=\"success\" type=\"submit\" onClick={handleSubmitItem}>\r\n              Submit\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={handleCloseBatchModal}>\r\n              Cancel\r\n            </Button>\r\n          </Modal.Footer>\r\n        )}\r\n      </Modal>\r\n      {/* ******************** //Batch Creation Modal ************************* */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateModal;\r\n","// ********New**********\r\nimport React, { useContext } from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { SideBarContext } from \"../store/SideMenuContext\";\r\n\r\nimport \"./Components.css\";\r\nfunction InventoryHomeMenu() {\r\n  const { setShow } = useContext(SideBarContext);\r\n  const { setCreate, setAlter, setList, setBook } = useContext(SideBarContext)\r\n  const navigate = useNavigate()\r\n  const handleAlert = () => alert(\"On Work Coming Soon\");\r\n\r\n  return (\r\n    <div className=\"inventoryHomeMenu_Pd\">\r\n      <div className=\"inventoryHomeMenu_Cd\">\r\n        <Card\r\n          bg=\"light\"\r\n          text=\"dark\"\r\n          style={{ width: \"18rem\", height: \"30rem\" }}\r\n          className=\"mb-2\"\r\n        >\r\n          <Card.Header style={{ textAlign: \"center\" }}>Go to</Card.Header>\r\n          <Card.Body style={{ lineHeight: \"10px\" }}>\r\n            <Card.Text className=\"text-Title\">Master</Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              onClick={() => {\r\n                setCreate(true);\r\n                setShow(true);\r\n              }}\r\n            >\r\n              Create\r\n            </Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              onClick={() => {\r\n                setAlter(true);\r\n                setShow(true);\r\n              }}\r\n            >\r\n              Alter\r\n            </Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              onClick={() => {\r\n                setList(true);\r\n                setShow(true);\r\n              }}\r\n            >\r\n              List of Stock Items\r\n            </Card.Text>\r\n            <Card.Text className=\"text-Title\">Transactions</Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              onClick={() => {\r\n                navigate(\"/arrivedmaterials\");\r\n              }}\r\n            >\r\n              Arrivals\r\n            </Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              \r\n            >\r\n              Despatch\r\n            </Card.Text>\r\n            <Card.Text className=\"text-items\" onClick={handleAlert}>\r\n              Processing\r\n            </Card.Text>\r\n            <Card.Text className=\"text-Title\">Reports</Card.Text>\r\n            <Card.Text className=\"text-items\" onClick={handleAlert}>\r\n              Stock Summery\r\n            </Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              onClick={() => {\r\n                setBook(true);\r\n                setShow(true);\r\n              }}\r\n            >\r\n              Inventory Books\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InventoryHomeMenu;\r\n","// ********New**********\r\nimport React, { useEffect } from \"react\";\r\nimport { Card, Col, Row, Table } from \"react-bootstrap\";\r\nimport DashBoardStock from \"../datas/DashBoardStock\";\r\nimport { collection, getDocs, doc, setDoc, getDoc } from \"firebase/firestore\";\r\n\r\nimport \"./Components.css\";\r\nimport { useContext } from \"react\";\r\nimport { FirebaseContext } from \"../store/Context\";\r\nimport { useState } from \"react\";\r\n\r\nfunction InventoryHomeStock() {\r\n  const datas = DashBoardStock;\r\n  const { db } = useContext(FirebaseContext);\r\n  const [stockDetails, setStockDetails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getStock = async () => {\r\n      const stockData = await getDocs(collection(db, \"Stock Items\"));\r\n      setStockDetails(\r\n        stockData.docs.map((doc) => ({\r\n          ...doc.data(),\r\n        }))\r\n      );\r\n    };\r\n    getStock();\r\n  }, [db]);\r\n  // find Total from array\r\n  console.log(stockDetails.reduce((a, v) => (a = a + v.quantity), 0));\r\n// const movies = data.filter(item => item.media_type === 'movie')),\r\n//     moviesCount = movies.length;\r\n  \r\n\r\nconst countGkWholes = stockDetails.filter(stockDetails => stockDetails.under === \"GK WHOLES\");\r\n  //  countTypes.length;\r\n   console.log(\"gededgh\", countGkWholes.length, countGkWholes);\r\n   console.log(countGkWholes.reduce((a, v) => (a = a + v.quantity), 0));\r\n  \r\n  return (\r\n    <div className=\"inventoryHomeStock_Pd\">\r\n      <div className=\"inventoryHomeStock_Cd\">\r\n        <Card bg=\"light\" text=\"dark\" className=\"mb-2 inventoryHomeStockCard\">\r\n          <Card.Header className=\"stockCardHead\">\r\n            <Row>\r\n              <Col>\r\n                <p>Current Period</p>\r\n              </Col>\r\n              <Col>\r\n                <p>Current Date</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <p>01 Apr 2021 to 31 Mar 2022</p>\r\n              </Col>\r\n              <Col>\r\n                <p>Tuesday, 25 January 2022</p>\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Card.Title> Opening Stock </Card.Title>\r\n            <Card.Text>\r\n              <Table striped bordered hover>\r\n                <tbody>\r\n                  {stockDetails.map((obj) => (\r\n                    <tr>\r\n                      <td>{obj.under}</td>\r\n                      <td>\r\n                        {obj.quantity} {obj.unit}\r\n                      </td>\r\n                      <td>{obj.lot} Lot </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InventoryHomeStock;\r\n","// ********New**********\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Modal, Button, Card } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { SideBarContext, StockAlterContext } from \"../store/SideMenuContext\";\r\n\r\nfunction InventoryModal() {\r\n  const [id, setId] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const {\r\n    setLabelThree,\r\n    setCreateGroup,\r\n    setCreateCategory,\r\n    setCreateUnit,\r\n    setCreateGodown,\r\n    setCreateItem,\r\n    show,\r\n    setShow,\r\n    create,\r\n    setCreate,\r\n    alter,\r\n    setAlter,\r\n    list,\r\n    setList,\r\n    book,\r\n    setBook,\r\n\r\n    setShowCreate,\r\n    setTitles,\r\n\r\n    setLabelOne,\r\n\r\n    setLabelTwo,\r\n\r\n    setPlaceHolder,\r\n  } = useContext(SideBarContext);\r\n\r\n  const {\r\n    setShowAlter,\r\n    setAlterGroup,\r\n    setAlterCategory,\r\n    setAlterItem,\r\n    setAlterUnit,\r\n    setAlterGodown,\r\n    listGroup,\r\n    setListGroup,\r\n    listCategory,\r\n    setListCategory,\r\n    listItem,\r\n    setListItem,\r\n    listGodown,\r\n    setListGodown,\r\n    listUnit,\r\n    setListUnit,\r\n    listShow,\r\n    setListShow,\r\n  } = useContext(StockAlterContext);\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setCreate(false);\r\n    setAlter(false);\r\n    setList(false);\r\n    setBook(false);\r\n  };\r\n\r\n  const handleCreate = (e) => {\r\n    setId(e.target.id);\r\n    if (e.target.id === \"create\") {\r\n      if (e.target.title === \"Stock Group\") {\r\n        setShowCreate(true);\r\n        setCreateGroup(true);\r\n        setTitles(\"Stock Group Creation\");\r\n        setLabelOne(\"Group Name\");\r\n        setLabelTwo(\"Under\");\r\n        setPlaceHolder(\"Type Group Name\");\r\n      } else if (e.target.title === \"Stock Category\") {\r\n        setShowCreate(true);\r\n        setCreateCategory(true);\r\n        setTitles(\"Stock Category Creation\");\r\n        setLabelOne(\"Category Name\");\r\n        setLabelTwo(\"Under\");\r\n        setPlaceHolder(\"Type Category Name\");\r\n      } else if (e.target.title === \"Unit\") {\r\n        setShowCreate(true);\r\n        setCreateUnit(true);\r\n        setTitles(\"Unit Creation\");\r\n        setLabelOne(\"Symbol\");\r\n        setLabelTwo(\"Formal Name\");\r\n        setLabelThree(\"Unit Quantity Code (UQC)\");\r\n        setPlaceHolder(\"Type Here....\");\r\n      } else if (e.target.title === \"Godown\") {\r\n        setShowCreate(true);\r\n        setCreateGodown(true);\r\n        setTitles(\"Godown Creation\");\r\n        setLabelOne(\"Godown Name\");\r\n        setLabelTwo(\"Under\");\r\n        setPlaceHolder(\"Type Here....\");\r\n      } else if (e.target.title === \"Stock Item\") {\r\n        setShowCreate(true);\r\n        setCreateItem(true);\r\n        setTitles(\"Stock Item Creation\");\r\n        setLabelOne(\"Item Name\");\r\n        setLabelTwo(\"Under\");\r\n        setLabelThree(\"Units\");\r\n        setPlaceHolder(\"Type Here....\");\r\n      }\r\n    } else {\r\n      console.log(id);\r\n    }\r\n  };\r\n\r\n  // ***********************Alter Section**********************\r\n  const handleAlter = (e) => {\r\n    if (e.target.id === \"alter\") {\r\n      if (e.target.title === \"Stock Group\") {\r\n        setShowAlter(true);\r\n        setAlterGroup(true);\r\n      } else if (e.target.title === \"Stock Category\") {\r\n        setShowAlter(true);\r\n        setAlterCategory(true);\r\n      } else if (e.target.title === \"Stock Item\") {\r\n        setShowAlter(true);\r\n        setAlterItem(true);\r\n      } else if (e.target.title === \"Unit\") {\r\n        setShowAlter(true);\r\n        setAlterUnit(true);\r\n      } else if (e.target.title === \"Godown\") {\r\n        setShowAlter(true);\r\n        setAlterGodown(true);\r\n      }\r\n    } else {\r\n      console.log(\"Its Not Alter Selection\");\r\n    }\r\n  };\r\n\r\n  // ***********************List Section**********************\r\n  const callList = () => {\r\n    navigate(\"/inventorychart\");\r\n  };\r\n  const handleList = (e) => {\r\n    if (e.target.id === \"list\") {\r\n      if (e.target.title === \"Stock Group\") {\r\n        setListCategory(false);\r\n        setListItem(false);\r\n        setListUnit(false);\r\n        setListGodown(false);\r\n\r\n        setListShow(true);\r\n        setListGroup(true);\r\n        callList();\r\n      } else if (e.target.title === \"Stock Category\") {\r\n        setListItem(false);\r\n        setListUnit(false);\r\n        setListGodown(false);\r\n        setListGroup(false);\r\n\r\n        setListShow(true);\r\n        setListCategory(true);\r\n        callList();\r\n      } else if (e.target.title === \"Stock Item\") {\r\n        setListCategory(false);\r\n        setListUnit(false);\r\n        setListGodown(false);\r\n        setListGroup(false);\r\n\r\n        setListShow(true);\r\n        setListItem(true);\r\n        callList();\r\n      } else if (e.target.title === \"Unit\") {\r\n        setListCategory(false);\r\n        setListItem(false);\r\n        setListGodown(false);\r\n        setListGroup(false);\r\n\r\n        setListShow(true);\r\n        setListUnit(true);\r\n        callList();\r\n      } else if (e.target.title === \"Godown\") {\r\n        setListCategory(false);\r\n        setListItem(false);\r\n        setListUnit(false);\r\n        setListGroup(false);\r\n\r\n        setListShow(true);\r\n        setListGodown(true);\r\n        callList();\r\n      }\r\n    } else {\r\n      console.log(\"Its Not Alter Selection\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button variant=\"primary\" onClick={handleShow}>\r\n          Launch static backdrop modal\r\n        </Button> */}\r\n      {/* *************************Create Modal********************* */}\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        style={{ width: \"max-content\", marginLeft: \"40%\" }}\r\n      >\r\n        {book === true ? (\r\n          <Modal.Header\r\n          // closeButton\r\n          >\r\n            <Modal.Title className=\"text-Title\">Inventory</Modal.Title>\r\n          </Modal.Header>\r\n        ) : (\r\n          <Modal.Header\r\n          // closeButton\r\n          >\r\n            <Modal.Title className=\"text-Title\">Inventory Master</Modal.Title>\r\n          </Modal.Header>\r\n        )}\r\n        {create === true ? (\r\n          <Modal.Body>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              id=\"create\"\r\n              title=\"Stock Group\"\r\n              onClick={(e) => {\r\n                handleCreate(e);\r\n                handleClose();\r\n              }}\r\n            >\r\n              Stock Group\r\n            </Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              id=\"create\"\r\n              title=\"Stock Category\"\r\n              onClick={(e) => {\r\n                handleCreate(e);\r\n                handleClose();\r\n              }}\r\n            >\r\n              Stock Category\r\n            </Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              id=\"create\"\r\n              title=\"Stock Item\"\r\n              onClick={(e) => {\r\n                handleCreate(e);\r\n                handleClose();\r\n              }}\r\n            >\r\n              Stock Item\r\n            </Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              id=\"create\"\r\n              title=\"Unit\"\r\n              onClick={(e) => {\r\n                handleCreate(e);\r\n                handleClose();\r\n              }}\r\n            >\r\n              Unit\r\n            </Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              id=\"create\"\r\n              title=\"Godown\"\r\n              onClick={(e) => {\r\n                handleCreate(e);\r\n                handleClose();\r\n              }}\r\n            >\r\n              Godown\r\n            </Card.Text>\r\n          </Modal.Body>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {/* * *************************End Create Modal********************* * * */}\r\n\r\n        {/* *************************Alter Modal********************* * */}\r\n        {alter === true ? (\r\n          <Modal.Body>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              id=\"alter\"\r\n              title=\"Stock Group\"\r\n              onClick={(e) => {\r\n                handleAlter(e);\r\n                // handleClose();\r\n              }}\r\n            >\r\n              Stock Group\r\n            </Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              id=\"alter\"\r\n              title=\"Stock Category\"\r\n              onClick={(e) => {\r\n                handleAlter(e);\r\n                // handleClose();\r\n              }}\r\n            >\r\n              Stock Category\r\n            </Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              id=\"alter\"\r\n              title=\"Stock Item\"\r\n              onClick={(e) => {\r\n                handleAlter(e);\r\n                // handleClose();\r\n              }}\r\n            >\r\n              Stock Item\r\n            </Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              id=\"alter\"\r\n              title=\"Unit\"\r\n              onClick={(e) => {\r\n                handleAlter(e);\r\n                // handleClose();\r\n              }}\r\n            >\r\n              Unit\r\n            </Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              id=\"alter\"\r\n              title=\"Godown\"\r\n              onClick={(e) => {\r\n                handleAlter(e);\r\n                // handleClose();\r\n              }}\r\n            >\r\n              Godown\r\n            </Card.Text>\r\n          </Modal.Body>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {/* *************************List Modal********************* * */}\r\n        {list === true ? (\r\n          <Modal.Body>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              id=\"list\"\r\n              title=\"Stock Group\"\r\n              onClick={(e) => {\r\n                handleList(e);\r\n                // handleClose();\r\n              }}\r\n            >\r\n              Stock Group\r\n            </Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              id=\"list\"\r\n              title=\"Stock Category\"\r\n              onClick={(e) => {\r\n                handleList(e);\r\n                // handleClose();\r\n              }}\r\n            >\r\n              Stock Category\r\n            </Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              id=\"list\"\r\n              title=\"Stock Item\"\r\n              onClick={(e) => {\r\n                handleList(e);\r\n                // handleClose();\r\n              }}\r\n            >\r\n              Stock Item\r\n            </Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              id=\"list\"\r\n              title=\"Unit\"\r\n              onClick={(e) => {\r\n                handleList(e);\r\n                // handleClose();\r\n              }}\r\n            >\r\n              Unit\r\n            </Card.Text>\r\n            <Card.Text\r\n              className=\"text-items\"\r\n              id=\"list\"\r\n              title=\"Godown\"\r\n              onClick={(e) => {\r\n                handleList(e);\r\n                // handleClose();\r\n              }}\r\n            >\r\n              Godown\r\n            </Card.Text>\r\n          </Modal.Body>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {book === true ? (\r\n          <Modal.Body>\r\n            <span>boook</span>\r\n          </Modal.Body>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      {/* *************************End Alter Modal********************* * */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InventoryModal;\r\n","// ********New**********\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Button, Offcanvas } from \"react-bootstrap\";\r\n\r\nimport \"./Components.css\";\r\nfunction InventorySideBar() {\r\n  function OffCanvasExample({ name, ...props }) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={handleShow} className=\"me-2 inventorySideBtn\">\r\n          {name}\r\n        </Button>\r\n        <Offcanvas show={show} onHide={handleClose} {...props}>\r\n          <Offcanvas.Header closeButton>\r\n            <Offcanvas.Title>Offcanvas</Offcanvas.Title>\r\n          </Offcanvas.Header>\r\n          <Offcanvas.Body>\r\n            Some text as placeholder. In real life you can have the elements you\r\n            have chosen. Like, text, images, lists, etc.\r\n          </Offcanvas.Body>\r\n        </Offcanvas>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"inventorySideBar_Pd\">\r\n      <div className=\"inventorySideBar_Cd\">\r\n        <OffCanvasExample placement=\"end\" name=\"Side Bar\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InventorySideBar;\r\n","// ********New**********\r\nimport React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport AlterModal from \"../Components/AlterModal\";\r\nimport ConfirmDltModal from \"../Components/ConfirmDltModal\";\r\nimport CreateModal from \"../Components/CreateModal\";\r\nimport InventoryHomeMenu from \"../Components/InventoryHomeMenu\";\r\nimport InventoryHomeStock from \"../Components/InventoryHomeStock\";\r\nimport InventoryModal from \"../Components/InventoryModal\";\r\nimport InventorySideBar from \"../Components/InventorySideBar\";\r\nimport NavbarHeader from \"../Components/Navbar\";\r\nimport { AlterContext, SideContext } from \"../store/SideMenuContext\";\r\n\r\nfunction InventoryPage() {\r\n  return (\r\n    <div>\r\n      {/* <AlterContext> */}\r\n      <SideContext>\r\n        <NavbarHeader />\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <InventoryHomeStock />\r\n            </Col>\r\n            <Col>\r\n              <InventoryHomeMenu />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <InventorySideBar />\r\n        <InventoryModal />\r\n        <CreateModal />\r\n        <AlterModal />\r\n        <ConfirmDltModal />\r\n      </SideContext>\r\n      {/* </AlterContext> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InventoryPage;\r\n","import { collection, getDocs } from \"firebase/firestore\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { Container, ListGroup } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FirebaseContext } from \"../../store/Context\";\r\nimport { StockAlterContext } from \"../../store/SideMenuContext\";\r\n\r\nfunction ChartofAccounts() {\r\n  const navigate = useNavigate();\r\n  const {\r\n    listGroup,\r\n    setListGroup,\r\n    listCategory,\r\n    setListCategory,\r\n    listItem,\r\n    setListItem,\r\n    listGodown,\r\n    setListGodown,\r\n    listUnit,\r\n    setListUnit,\r\n    listShow,\r\n    setListShow,\r\n  } = useContext(StockAlterContext);\r\n  const { db } = useContext(FirebaseContext);\r\n\r\n  const [masterList1, setMasterList1] = useState([]);\r\n  const [title1, setTitle1] = useState(\"\");\r\n\r\n  useEffect(async () => {\r\n    if (listShow) {\r\n      if (listGroup === true) {\r\n        setTitle1(\"List of Stock Group\");\r\n        const collectionData = await getDocs(collection(db, \"StockGroup\"));\r\n        setMasterList1(\r\n          collectionData.docs.map((doc) => ({\r\n            ...doc.data(),\r\n          }))\r\n        );\r\n      } else if (listCategory === true) {\r\n        setTitle1(\"List of Category Group\");\r\n        const collectionData = await getDocs(collection(db, \"StockCategory\"));\r\n        setMasterList1(\r\n          collectionData.docs.map((doc) => ({\r\n            ...doc.data(),\r\n          }))\r\n        );\r\n      } else if (listItem === true) {\r\n        setTitle1(\"List of Stock Items\");\r\n        const collectionData = await getDocs(collection(db, \"Stock Items\"));\r\n        setMasterList1(\r\n          collectionData.docs.map((doc) => ({\r\n            ...doc.data(),\r\n          }))\r\n        );\r\n      } else if (listUnit === true) {\r\n        setTitle1(\"List of Units\");\r\n        const collectionData = await getDocs(collection(db, \"Units\"));\r\n        setMasterList1(\r\n          collectionData.docs.map((doc) => ({\r\n            ...doc.data(),\r\n          }))\r\n        );\r\n      } else if (listGodown === true) {\r\n        setTitle1(\"List of Godowns\");\r\n        const collectionData = await getDocs(collection(db, \"Godown\"));\r\n        setMasterList1(\r\n          collectionData.docs.map((doc) => ({\r\n            ...doc.data(),\r\n          }))\r\n        );\r\n      }\r\n    } else {\r\n      alert(\"Invalid Selection\");\r\n      navigate(\"/inventory\");\r\n    }\r\n  }, [db, listGroup, listCategory, listItem, listUnit, listGodown]);\r\n  console.log(\"maslist\", masterList1, listGroup);\r\n  return (\r\n    <div>\r\n      <Container pt={5} className=\"pt-5\">\r\n        {listGroup ? (\r\n          <ListGroup as=\"ol\" numbered>\r\n            <ListGroup.Item variant=\"primary\">{title1}</ListGroup.Item>\r\n            {masterList1.map((obj) => (\r\n              <ListGroup.Item action as=\"li\">\r\n                {obj.groupName}\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {listCategory ? (\r\n          <ListGroup as=\"ol\" numbered>\r\n            <ListGroup.Item variant=\"primary\">{title1}</ListGroup.Item>\r\n            {masterList1.map((obj) => (\r\n              <ListGroup.Item as=\"li\" action>\r\n                {obj.categoryName}\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {listItem ? (\r\n          <ListGroup as=\"ol\" numbered>\r\n            <ListGroup.Item variant=\"primary\">{title1}</ListGroup.Item>\r\n            {masterList1.map((obj) => (\r\n              <ListGroup.Item as=\"li\" action>\r\n                {obj.itemName}\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {listUnit ? (\r\n          <ListGroup as=\"ol\" numbered>\r\n            <ListGroup.Item variant=\"primary\">{title1}</ListGroup.Item>\r\n            {masterList1.map((obj) => (\r\n              <ListGroup.Item as=\"li\" action>\r\n                {obj.symbol ? `${obj.symbol}-${obj.formalName}` : \"\"}\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {listGodown ? (\r\n          <ListGroup as=\"ol\" numbered>\r\n            <ListGroup.Item variant=\"primary\">{title1}</ListGroup.Item>\r\n            {masterList1.map((obj) => (\r\n              <ListGroup.Item as=\"li\" action>\r\n                {obj.godownName}\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {masterList1.length === 0 ? (\r\n          <ListGroup as=\"ol\" numbered>   \r\n              <ListGroup.Item as=\"li\" action>\r\n                {title1} is Empty!\r\n              </ListGroup.Item>\r\n          </ListGroup>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartofAccounts;\r\n","import React from 'react'\r\nimport NavbarHeader from '../Components/Navbar'\r\nimport ChartofAccounts from '../containers/inventory/ChartofAccounts'\r\n\r\nfunction ChartofAccountsPage() {\r\n  return (\r\n      <div>\r\n          <NavbarHeader />\r\n          <ChartofAccounts/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChartofAccountsPage","import React, { useEffect, useContext } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport SignIn from \"./Pages/LoginPage\";\nimport DashBoardPage from \"./Pages/DashBoardPage\";\nimport ListOfUsersPage from \"./Pages/ListOfUsersPage\";\nimport AddUsersPage from \"./Pages/AddUsersPage\";\nimport { AuthContext, FirebaseContext } from \"./store/Context\";\nimport { onAuthStateChanged, getAuth } from \"firebase/auth\";\nimport ArrivedMaterialsPage from \"./Pages/inventory/ArrivedMaterialsPage\";\nimport StockRegisterPage from \"./Pages/inventory/StockRegisterPage\";\nimport { useNavigate } from \"react-router-dom\";\nimport ProcessingPage from \"./Pages/inventory/ProcessingPage\";\nimport TypeAhead from \"./Components/TypeAhead\";\nimport InventoryPage from \"./Pages/InventoryPage\";\nimport { useState } from \"react\";\nimport { doc, getDoc } from \"firebase/firestore\";\n\nimport { AlterContext } from \"./store/SideMenuContext\";\nimport ChartofAccountsPage from \"./Pages/ChartofAccountsPage\";\n\nfunction App() {\n  //const navigate = useNavigate();\n  const auth = getAuth();\n  const { setUserDtls, userDtls, userDetails, setUserDetails } =\n    useContext(AuthContext);\n\n  const { db } = useContext(FirebaseContext);\n  useEffect(() => {\n    onAuthStateChanged(auth, async (user) => {\n      setUserDtls(user);\n      if (user) {\n        console.log(\"userApp\", user.uid);\n        const userRef = doc(db, \"users\", user.uid);\n\n        const docSnap = await getDoc(userRef);\n        if (docSnap.exists()) {\n          setUserDetails(docSnap.data());\n          console.log(\"Document data:\", docSnap.data());\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      }\n    });\n  }, [auth, setUserDtls]);\n\n  return (\n    <div className=\"App\">\n      <AlterContext>\n        <BrowserRouter>\n          <Routes>\n            <Route\n              exact\n              path=\"/\"\n              element={userDtls ? <DashBoardPage /> : <SignIn />}\n            />{\" \"}\n            {/* start work 24-01-2022,,finish Designing */}\n            <Route path=\"/inventory\" element={<InventoryPage />} />{\" \"}\n            {/* start work 25-01-2022 12:44 AM, */}\n            <Route path=\"/inventorychart\" element={<ChartofAccountsPage />} />\n            <Route path=\"/signin\" element={<SignIn />} />\n            <Route path=\"/processing\" element={<ProcessingPage />} />\n            <Route path=\"/addusers\" element={<AddUsersPage />} />\n            <Route path=\"/userslist\" element={<ListOfUsersPage />} />\n            <Route\n              path=\"/arrivedmaterials\"\n              element={<ArrivedMaterialsPage />}\n            />\n            <Route path=\"/stockreg\" element={<StockRegisterPage />} />\n            <Route path=\"/test\" element={<TypeAhead />} />\n          </Routes>\n        </BrowserRouter>\n      </AlterContext>\n    </div>\n  );\n}\n\nexport default App;\n","import { initializeApp } from \"firebase/app\";\r\n//import {getFirestore} from '@firebase/firestore'\r\nimport { getFirestore } from \"firebase/firestore\";\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBKXuPnSy6Omk_wBpgHEtGW35r11Xad0Uo\",\r\n  authDomain: \"vlc-accounting-app.firebaseapp.com\",\r\n  projectId: \"vlc-accounting-app\",\r\n  storageBucket: \"vlc-accounting-app.appspot.com\",\r\n  messagingSenderId: \"787838262015\",\r\n  appId: \"1:787838262015:web:7869d15468f30e41c5caca\",\r\n  measurementId: \"G-ND85Y2SHTW\",\r\n};\r\n\r\nconst firebase = initializeApp(firebaseConfig);\r\nconst db = getFirestore(firebase);\r\nexport default db;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport Context,  {FirebaseContext}  from \"./store/Context\";\nimport db from \"./firebase/config\";\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={{ db }}>\n        <Context>\n          <App />\n        </Context>\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}